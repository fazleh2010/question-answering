[{
        "pattern": "active_career",
        "predicates": ["dbo:activeYearsEndDate"],
        "questions": {
            "388": "When did Boris Becker end his active career?"
        },
        "Sparql": {
            "Sparql_388": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?d WHERE { res:Boris_Becker dbo:activeYearsEndDate ?d }"
        }
    }, {
        "pattern": "alive",
        "predicates": ["dbo:deathDate"],
        "questions": {
            "235": "Is Frank Herbert still alive?"
        },
        "Sparql": {
            "Sparql_235": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { OPTIONAL { res:Frank_Herbert dbo:deathDate ?date } FILTER ( ! bound(?date) ) }"
        }
    }, {
        "pattern": "alma_mater",
        "predicates": ["dbo:almaMater"],
        "questions": {
            "194": "What is the alma mater of the chancellor of Germany Angela Merkel?"
        },
        "Sparql": {
            "Sparql_194": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Almamater WHERE { dbr:Angela_Merkel dbo:almaMater ?Almamater }"
        }
    }, {
        "pattern": "artistic_movement",
        "predicates": ["dbo:movement"],
        "questions": {
            "355": "To which artistic movement did the painter of The Three Dancers belong?"
        },
        "Sparql": {
            "Sparql_355": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Three_Dancers dbo:author ?person . ?person dbo:movement ?uri }"
        }
    }, {
        "pattern": "australian",
        "predicates": ["dbo:country", "dbo:locationCountry", "dbo:location", "dbo:hometown"],
        "questions": {
            "71": "Give me all Australian nonprofit organizations.",
            "101": "Give me all Australian metalcore bands."
        },
        "Sparql": {
            "Sparql_71": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Nonprofit_organization> { ?uri <http://dbpedia.org/ontology/locationCountry> <http://dbpedia.org/resource/Australia> } UNION { ?uri <http://dbpedia.org/ontology/location> ?x . ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> } }",
            "Sparql_101": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Band> ; <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Metalcore> { ?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Australia> } UNION { ?uri <http://dbpedia.org/ontology/hometown> ?h . ?h <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> } }"
        }
    }, 
    {
        "pattern": "big",
        "predicates": ["dbo:areaTotal"],
        "questions": {
            "278": "how big is the total area of North Rhine- Westphalia?"
        },
        "Sparql": {
            "Sparql_278": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?tarea WHERE { dbr:North_Rhine-Westphalia dbo:areaTotal ?tarea }"
        }
    }, {
        "pattern": "bigger",
        "predicates": ["dbo:areaTotal"],
        "questions": {
            "346": "Is Lake Baikal bigger than the Great Bear Lake?"
        },
        "Sparql": {
            "Sparql_346": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Lake_Baikal dbo:areaTotal ?a1 . res:Great_Bear_Lake dbo:areaTotal ?a2 FILTER ( ?a1 > ?a2 ) }"
        }
    }, {
        "pattern": "biggest",
        "predicates": ["dbo:seatingCapacity"],
        "questions": {
            "207": "What is the biggest stadium in Spain?"
        },
        "Sparql": {
            "Sparql_207": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Stadium ; dbo:location res:Spain ; dbo:seatingCapacity ?n } ORDER BY DESC(?n) OFFSET 0 LIMIT 1"
        }
    }, {
        "pattern": "canadian",
        "predicates": ["dbo:country"],
        "questions": {
            "394": "Give me all Canadian Grunge record labels."
        },
        "Sparql": {
            "Sparql_394": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:RecordLabel ; dbo:genre res:Grunge ; dbo:country res:Canada }"
        }
    }, {
        "pattern": "common_root",
        "predicates": ["dbo:languageFamily"],
        "questions": {
            "344": "Do Urdu and Persian have a common root?"
        },
        "Sparql": {
            "Sparql_344": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> ASK WHERE { dbr:Urdu dbo:languageFamily ?uri . dbr:Persian_language dbo:languageFamily ?uri }"
        }
    }, {
        "pattern": "danish",
        "predicates": ["dbo:country"],
        "questions": {
            "11": "Give me all Danish films.",
            "51": "Give me all Danish movies."
        },
        "Sparql": {
            "Sparql_11": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:country res:Denmark }",
            "Sparql_51": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Denmark> }"
        }
    }, {
        "pattern": "deep",
        "predicates": ["dbo:maximumDepth"],
        "questions": {
            "28": "How deep is Lake Placid?"
        },
        "Sparql": {
            "Sparql_28": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Lake_Placid_(Texas)> dbo:maximumDepth ?n }"
        }
    }, {
        "pattern": "densty",
        "predicates": ["dbp:populationDensityRank"],
        "questions": {
            "288": "how much is the population densty rank of germany?"
        },
        "Sparql": {
            "Sparql_288": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?rank WHERE { dbr:Germany dbp:populationDensityRank ?rank }"
        }
    }, {
        "pattern": "doctoral",
        "predicates": ["dbo:doctoralAdvisor"],
        "questions": {
            "337": "Who was the doctoral supervisor of Albert Einstein?"
        },
        "Sparql": {
            "Sparql_337": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Albert_Einstein dbo:doctoralAdvisor ?uri }"
        }
    }, 
    {
        "pattern": "first_album",
        "predicates": ["dbo:releaseDate"],
        "questions": {
            "130": "For which label did Elvis record his first album? [first=dbo:releaseDate]"
        },
        "Sparql": {
            "Sparql_130": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?x rdf:type dbo:Album ; dbo:artist res:Elvis_Presley ; dbo:releaseDate ?y ; dbo:recordLabel ?uri } ORDER BY ASC(?y) OFFSET 0 LIMIT 1"
        }
    }, 
    {
        "pattern": "first_season",
        "predicates": ["dbo:seasonNumber"],
        "questions": {
            "158": "List all episodes of the first season of the HBO television series The Sopranos!  [first=dbo:seasonNumber]",
            "331": "List all episodes of the first season of the HBO television series The Sopranos. [first=dbo:seasonNumber]"
        },
        "Sparql": {
            "Sparql_158": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:The_Sopranos ; dbo:seasonNumber 1 }",
            "Sparql_331": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:The_Sopranos ; dbo:seasonNumber 1 }"
        }
    }, 

    {
        "pattern": "first_king",
        "predicates": ["rdf:type"],
        "questions": {
            "219": "Who was the first King of England? [first=dbo:activeYearsStartYear]"
        },
        "Sparql": {
            "Sparql_219": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Royalty ; rdf:type yago:WikicatEnglishMonarchs ; dbo:activeYearsStartYear ?date } ORDER BY ASC(?date) OFFSET 0 LIMIT 1"
        }
    },
    {
        "pattern": "first_to",
        "predicates": ["dbo:firstAscentPerson"],
        "questions": {
            "384": "Who was the first to climb Mount Everest? [first_to=dbo:firstAscentPerson]"
        },
        "Sparql": {
            "Sparql_384": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Mount_Everest dbo:firstAscentPerson ?uri }"
        }
    },
    {
        "pattern": "first",
        "predicates": ["dbo:releaseDate"],
        "questions": {
            "409": "What was the first Queen album? [first=dbo:releaseDate]"
        },
        "Sparql": {
            "Sparql_409": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Album ; dbo:artist <http://dbpedia.org/resource/Queen_(band)> ; dbo:releaseDate ?d } ORDER BY ASC(?d) OFFSET 0 LIMIT 1"
        }
    },
    {
        "pattern": "first_name",
        "predicates": ["dbo:alias"],
        "questions": {
            "410": "What was the first name of the band Queens of the Stone Age? [first_name=dbo:alias]"
        },
        "Sparql": {
            "Sparql_410": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?name WHERE { res:Queens_of_the_Stone_Age dbo:alias ?name }"
        }
    },  
    {
        "pattern": "german",
        "predicates": ["dbo:birthPlace", "dbo:country"],
        "questions": {
            "17": "Which monarchs were married to a German?",
            "57": "Which rivers flow into a German lake?"
        },
        "Sparql": {
            "Sparql_17": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Monarch ; dbo:spouse ?spouse { ?spouse dbo:birthPlace res:Germany } UNION { ?spouse dbo:birthPlace ?p . ?p dbo:country res:Germany } }",
            "Sparql_57": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/River> . ?x <http://dbpedia.org/ontology/inflow> ?uri ; a <http://dbpedia.org/ontology/Lake> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> }"
        }
    }, {
        "pattern": "greek",
        "predicates": ["dbo:country"],
        "questions": {
            "163": "Which Greek parties are pro-European?"
        },
        "Sparql": {
            "Sparql_163": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/PoliticalParty> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Greece> ; <http://dbpedia.org/ontology/ideology> <http://dbpedia.org/resource/Pro-Europeanism> }"
        }
    }, {
        "pattern": "heaviest",
        "predicates": ["dbo:weight"],
        "questions": {
            "186": "Who is the heaviest player of the Chicago Bulls?"
        },
        "Sparql": {
            "Sparql_186": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Person> ; <http://dbpedia.org/ontology/weight> ?num { ?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Chicago_Bulls> } UNION { ?uri <http://dbpedia.org/property/draftTeam> <http://dbpedia.org/resource/Chicago_Bulls> } UNION { ?uri <http://dbpedia.org/ontology/draftTeam> <http://dbpedia.org/resource/Chicago_Bulls> } } ORDER BY DESC(?num) OFFSET 0 LIMIT 1"
        }
    }, {
        "pattern": "heavy",
        "predicates": ["dbo:mass"],
        "questions": {
            "156": "How heavy is Jupiter's lightest moon?"
        },
        "Sparql": {
            "Sparql_156": "SELECT DISTINCT ?n WHERE { ?uri <http://dbpedia.org/property/satelliteOf> <http://dbpedia.org/resource/Jupiter> ; <http://dbpedia.org/ontology/mass> ?n } ORDER BY ASC(?n) OFFSET 0 LIMIT 1"
        }
    }, {
        "pattern": "high",
        "predicates": ["dbo:height"],
        "questions": {
            "298": "How high is the lighthouse in Colombo?",
            "304": "How high is the Yokohama Marine Tower?"
        },
        "Sparql": {
            "Sparql_298": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Colombo_Lighthouse dbo:height ?num }",
            "Sparql_304": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Yokohama_Marine_Tower dbo:height ?num }"
        }
    }, {
        "pattern": "higher",
        "predicates": ["dbo:height", "dbo:elevation", "dbo:elevationM"],
        "questions": {
            "34": "Show me all basketball players that are higher than 2 meters.",
            "174": "Which mountains are higher than the Nanga Parbat?"
        },
        "Sparql": {
            "Sparql_34": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/BasketballPlayer> ; <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > 2.0 ) }",
            "Sparql_174": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nanga_Parbat> <http://dbpedia.org/ontology/elevation> ?elevation . ?uri a <http://dbpedia.org/ontology/Mountain> { ?uri <http://dbpedia.org/ontology/elevation> ?otherelevation } UNION { ?uri <http://dbpedia.org/property/elevationM> ?otherelevation } FILTER ( ?otherelevation > ?elevation ) }"
        }
    }, {
        "pattern": "highest",
        "predicates": ["dbp:densityrank"],
        "questions": {
            "16": "Which state of the USA has the highest population density? [highest=dbp:densityrank]"
        },
        "Sparql": {
            "Sparql_16": "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatStatesOfTheUnitedStates ; dbp:densityrank ?rank } ORDER BY ASC(?rank) LIMIT 1"
        }
    }, 
    {
        "pattern": "highest_density",
        "predicates": ["dbp:densityrank", "dbp:highest", "dbo:elevation"],
        "questions": {
            "22": "Which state of the United States of America has the highest density? [highest=dbp:densityrank]"
        },
        "Sparql": {
            "Sparql_22": "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1"
        }
    }, 
    {
        "pattern": "highest_place",
        "predicates": ["dbp:highest"],
        "questions": {
            "65": "What is the highest place of the Urals? [highest=dbp:highest]"
        },
        "Sparql": {
            "Sparql_65": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ural_Mountains> <http://dbpedia.org/property/highest> ?uri }"
        }
    }, 

    {
        "pattern": "highest_mountain",
        "predicates": ["dbo:elevation"],
        "questions": {
            "120": "What is the highest mountain? [highest=dbo:elevation]",
            "165": "What is the second highest mountain on Earth? [highest=dbo:elevation]",
            "201": "What is the highest mountain in Saxony Germany? [highest=dbo:elevation]",
            "289": "What is the highest mountain in Italy? [highest=dbo:elevation]",
            "400": "What is the highest mountain in Australia? [highest=dbo:elevation]"
        },
        "Sparql": {
            "Sparql_16": "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatStatesOfTheUnitedStates ; dbp:densityrank ?rank } ORDER BY ASC(?rank) LIMIT 1",
            "Sparql_22": "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1",
            "Sparql_65": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ural_Mountains> <http://dbpedia.org/property/highest> ?uri }",
            "Sparql_120": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Mountain> ; <http://dbpedia.org/ontology/elevation> ?elevation } ORDER BY DESC(?elevation) OFFSET 0 LIMIT 1",
            "Sparql_165": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Mountain> ; <http://dbpedia.org/ontology/elevation> ?elevation } ORDER BY DESC(?elevation) OFFSET 1 LIMIT 1",
            "Sparql_201": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?m WHERE { ?m dbo:mountainRange dbr:Ore_Mountains ; dbo:elevation ?height } ORDER BY DESC(?height) LIMIT 1",
            "Sparql_289": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Mountain ; dbo:locatedInArea res:Italy ; dbo:elevation ?num } ORDER BY DESC(?num) OFFSET 0 LIMIT 1",
            "Sparql_400": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Mountain ; dbo:locatedInArea res:Australia ; dbo:elevation ?elevation } ORDER BY DESC(?elevation) LIMIT 1"
        }
    }, 
    {
        "pattern": "indian",
        "predicates": ["dbo:location"],
        "questions": {
            "269": "Which Indian company has the most employees?"
        },
        "Sparql": {
            "Sparql_269": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Company ; dbo:location res:India ; dbo:numberOfEmployees ?n } ORDER BY DESC(?n) OFFSET 0 LIMIT 1"
        }
    }, {
        "pattern": "large",
        "predicates": ["dbo:areaTotal"],
        "questions": {
            "209": "How large is the area of UK?"
        },
        "Sparql": {
            "Sparql_209": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?area WHERE { dbr:United_Kingdom dbo:areaTotal ?area }"
        }
    }, {
        "pattern": "largest_ metropolitan",
        "predicates": ["dbp:largestmetro"],
        "questions": {
            "98": "What is the largest metropolitan area in Washington state? [largest=dbp:largestmetro]"
        },
        "Sparql": {
            "Sparql_98": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Washington_(state)> <http://dbpedia.org/property/largestmetro> ?uri }"
        }
    }, 
    {
        "pattern": "largest_city",
        "predicates": ["dbo:largestCity"],
        "questions": {
            "166": "Is Egypts largest city also its capital? [largest=dbo:largestCity]",
            "189": "What is the largest city in america? [largest=dbo:largestCity]",
            "284": "How many inhabitants does the largest city in Canada have? [largest=dbo:largestCity]",
            "301": "What is the largest city in Australia? [largest=dbo:largestCity]"
        },
        "Sparql": {
            "Sparql_166": "ASK WHERE { <http://dbpedia.org/resource/Egypt> <http://dbpedia.org/ontology/largestCity> ?large ; <http://dbpedia.org/ontology/capital> ?capital FILTER ( ?large = ?capital ) }",
            "Sparql_189": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?lcity WHERE { dbr:United_States dbo:largestCity ?lcity }",
            "Sparql_284": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Canada dbo:largestCity ?city . ?city dbo:populationTotal ?num }",
            "Sparql_301": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Australia dbo:largestCity ?uri }"
        }
    },

    {
        "pattern": "largest_country",
        "predicates": ["dbo:areaTotal"],
        "questions": {
            "188": "What is the largest country in the world? [largest=dbo:areaTotal]"
        },
        "Sparql": {
            "Sparql_188": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Country ; dbo:areaTotal ?n } ORDER BY DESC(?n) OFFSET 0 LIMIT 1"
        }
    },

    {
        "pattern": "last",
        "predicates": ["rdfs:label"],
        "questions": {
            "88": "Which music albums contain the song Last Christmas? [last=rdfs:label]"
        },
        "Sparql": {
            "Sparql_88": "SELECT DISTINCT ?uri WHERE { ?single <http://dbpedia.org/ontology/album> ?uri ; <http://www.w3.org/2000/01/rdf-schema#label> \"Last Christmas\"@en }"
        }
    }, 

    {
        "pattern": "last_episode",
        "predicates": ["dbo:completionDate"],
        "questions": {
            "226": "When was the last episode of the TV series Friends aired?"
        },
        "Sparql": {
            "Sparql_226": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?date WHERE { dbr:Friends dbo:completionDate ?date }"
        }
    }, 

    {
        "pattern": "last_work",
        "predicates": ["dbp:releaseDate"],
        "questions": {
            "236": "What is the last work of Dan Brown?"
        },
        "Sparql": {
            "Sparql_236": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?book WHERE { { ?book dbo:author dbr:Dan_Brown . ?book dbp:releaseDate ?date } UNION { ?book dbo:author dbr:Dan_Brown . ?book dbo:publicationDate ?date} } ORDER BY DESC(xsd:date(?date)) LIMIT 1"
        }
    },     

    {
        "pattern": "last_movie",
        "predicates": ["dbp:releaseDate"],
        "questions": {
            "411": "What was the last movie with Alec Guinness?"
        },
        "Sparql": {
            "Sparql_411": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Alec_Guinness ; dbo:releaseDate ?date } ORDER BY DESC(?date) LIMIT 1"
        }
    },     

    {
        "pattern": "least_inhabitant",
        "predicates": ["dbo:populationTotal"],
        "questions": {
            "332": "Which city has the least inhabitants? [least=dbo:populationTotal]"
        },
        "Sparql": {
            "Sparql_332": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:City ; dbo:populationTotal ?pop } ORDER BY ASC(?pop) OFFSET 0 LIMIT 1"
        }
    }, {
        "pattern": "lightest",
        "predicates": ["dbo:mass"],
        "questions": {
            "156": "How heavy is Jupiter's lightest moon?"
        },
        "Sparql": {
            "Sparql_156": "SELECT DISTINCT ?n WHERE { ?uri <http://dbpedia.org/property/satelliteOf> <http://dbpedia.org/resource/Jupiter> ; <http://dbpedia.org/ontology/mass> ?n } ORDER BY ASC(?n) OFFSET 0 LIMIT 1"
        }
    }, {
        "pattern": "longest",
        "predicates": ["dbp:length"],
        "questions": {
            "149": "What is the longest river?",
            "251": "What is the longest river in the world?"
        },
        "Sparql": {
            "Sparql_149": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/River> { ?uri <http://dbpedia.org/ontology/length> ?l } UNION { ?uri <http://dbpedia.org/property/length> ?l } } ORDER BY DESC(?l) OFFSET 0 LIMIT 1",
            "Sparql_251": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri rdf:type dbo:BodyOfWater ; dbo:length ?length } ORDER BY DESC(?length) LIMIT 1"
        }
    }, 
    {
        "pattern": "longest",
        "predicates": ["dbo:mainspan"],
        "questions": {
            "357": "What is the bridge with the longest span?"
        },
        "Sparql": {
            "Sparql_357": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Bridge ; dbo:mainspan ?s } ORDER BY DESC(?s) OFFSET 0 LIMIT 1"
        }
    }, 

    {
        "pattern": "lowest_rank",
        "predicates": ["dbp:fifaMin"],
        "questions": {
            "105": "What was Brazil's lowest rank in the FIFA World Ranking?"
        },
        "Sparql": {
            "Sparql_105": "SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Brazil_national_football_team> <http://dbpedia.org/property/fifaMin> ?n }"
        }
    }, {
        "pattern": "many",
        "predicates": ["dbo:populationTotal", "dbo:numberOfEmployees", "dbp:programme", "dbo:almaMater", "dbp:children", "dbo:numberOfEmployees"],
        "questions": {
            "60": "How many inhabitants does Maribor have? [many_inhabitant=dbo:populationTotal]",
            "85": "How many employees does Google have [many_employee=dbo:numberOfEmployees]?",
            "90": "How many missions does the Soyuz programme have? [many mission=dbp:programme]",
            "140": "How many politicians graduated from Columbia University? [many_graduate=dbo:almaMater]",
            "157": "How many employees does IBM have?[many_ employee=dbo:numberOfEmployees]",
            "168": "How many programming languages are there? [many_ employee=dbo:ProgrammingLanguage>]",
            "225": "How many people live in Poland? [many_people=dbo:populationTotal]",
            "250": "How many Aldi stores are there? [many=dbo:numberOfLocations]",
            "256": "How many people live in the capital of Australia?[many_people=dbo:populationTotal]",
            "262": "With how many countries Iran has borders? [many_country=dbp:borders]",
            "284": "How many inhabitants does the largest city in Canada have? [many_country=dbo:populationTotal]",
            "319": "How many pages does War and Peace have? [many_page=dbo:numberOfPages]",
            "351": "How many people live in Eurasia? [many_people=dbo:populationTotal]"
        },
        "Sparql": {
            "Sparql_60": "SELECT DISTINCT ?num WHERE { <http://dbpedia.org/resource/Maribor> <http://dbpedia.org/ontology/populationTotal> ?num }",
            "Sparql_85": "SELECT DISTINCT ?num WHERE { <http://dbpedia.org/resource/Google> <http://dbpedia.org/ontology/numberOfEmployees> ?num }",
            "Sparql_90": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/property/programme> <http://dbpedia.org/resource/Soyuz_programme> }",
            "Sparql_140": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Politician> ; <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Columbia_University> }",
            "Sparql_157": "SELECT DISTINCT ?number WHERE { <http://dbpedia.org/resource/IBM> <http://dbpedia.org/ontology/numberOfEmployees> ?number }",
            "Sparql_168": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/ProgrammingLanguage> }",
            "Sparql_225": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Poland dbo:populationTotal ?uri }",
            "Sparql_250": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?number WHERE { res:Aldi dbo:numberOfLocations ?number }",
            "Sparql_256": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Australia dbo:capital ?x . ?x dbo:populationTotal ?num }",
            "Sparql_262": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?border WHERE { dbr:Geography_of_Iran dbp:borders ?border } LIMIT 8",
            "Sparql_284": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Canada dbo:largestCity ?city . ?city dbo:populationTotal ?num }",
            "Sparql_319": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?n WHERE { res:War_and_Peace dbo:numberOfPages ?n }",
            "Sparql_362": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { res:Benjamin_Franklin dbo:child ?uri }"
        }
    }, {
        "pattern": "methodist",
        "predicates": ["dbo:religion"],
        "questions": {
            "118": "Give me all Methodist politicians."
        },
        "Sparql": {
            "Sparql_118": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Politician> ; <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Methodism> }"
        }
    }, {
        "pattern": "metropolitan",
        "predicates": ["dbp:largestmetro"],
        "questions": {
            "98": "What is the largest metropolitan area in Washington state?"
        },
        "Sparql": {
            "Sparql_98": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Washington_(state)> <http://dbpedia.org/property/largestmetro> ?uri }"
        }
    }, {
        "pattern": "military",
        "predicates": ["dbo:battle"],
        "questions": {
            "369": "In which military conflicts did Lawrence of Arabia participate?"
        },
        "Sparql": {
            "Sparql_369": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:T._E._Lawrence dbo:battle ?uri }"
        }
    }, {
        "pattern": "much",
        "predicates": ["dbo:elevation", "dbp:populationDensityRank"],
        "questions": {
            "83": "How much carbs does peanut butter have?",
            "216": "how much is the elevation of Düsseldorf Airport ?",
            "217": "How much is the population of mexico city ?",
            "230": "how much is the total population of  european union?",
            "283": "how much is the population  Iraq?",
            "288": "how much is the population densty rank of germany?"
        },
        "Sparql": {
            "Sparql_83": "SELECT DISTINCT ?carbs WHERE { <http://dbpedia.org/resource/Peanut_butter> <http://dbpedia.org/property/carbs> ?carbs }",
            "Sparql_216": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?ele WHERE { dbr:Düsseldorf_Airport dbo:elevation ?ele } LIMIT 1",
            "Sparql_217": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Mexico_City WHERE { dbr:Mexico_City dbo:populationTotal ?Mexico_City }",
            "Sparql_230": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?europop WHERE { dbr:European_Union dbo:populationTotal ?europop }",
            "Sparql_283": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?pIraq WHERE { dbr:Iraq dbo:populationTotal ?pIraq }",
            "Sparql_288": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?rank WHERE { dbr:Germany dbp:populationDensityRank ?rank }"
        }
    }, {
        "pattern": "net_income",
        "predicates": ["dbo:netIncome"],
        "questions": {
            "93": "What is the net income of Apple?"
        },
        "Sparql": {
            "Sparql_93": "SELECT DISTINCT ?ni WHERE { <http://dbpedia.org/resource/Apple_Inc.> <http://dbpedia.org/ontology/netIncome> ?ni }"
        }
    },    
    {
        "pattern": "official_language",
        "predicates": ["dbo:officialLanguage", "dbp:officialLanguages"],
        "questions": {
            "10": "What are the official languages of the Philippines?",
            "110": "Which country has the most official languages?",
            "134": "Which countries have more than two official languages?",
            "291": "What is the official language of Suriname?"
        },
        "Sparql": {
            "Sparql_10": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Philippines dbo:officialLanguage ?uri }",
            "Sparql_110": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . ?uri <http://dbpedia.org/property/officialLanguages> ?language . } ORDER BY DESC(COUNT(?language)) OFFSET 0 LIMIT 1",
            "Sparql_134": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> ; <http://dbpedia.org/ontology/officialLanguage> ?language } GROUP BY ?uri HAVING ( COUNT(?language) > 2 )",
            "Sparql_291": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Suriname dbo:officialLanguage ?uri }"
        }
    }, 
    {
        "pattern": "official color",
        "predicates": ["dbo:officialSchoolColour"],
        "questions": {
            "49": "What is the official color of the University of Oxford?"
        },
        "Sparql": {
            "Sparql_49": "SELECT DISTINCT ?string WHERE { <http://dbpedia.org/resource/University_of_Oxford> <http://dbpedia.org/ontology/officialSchoolColour> ?string }"
        }
    }, 

    {
        "pattern": "old",
        "predicates": ["dbo:numberOfEpisodes"],
        "questions": {
            "160": "Does the new Battlestar Galactica series have more episodes than the old one?"
        },
        "Sparql": {
            "Sparql_160": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { <http://dbpedia.org/resource/Battlestar_Galactica_%281978_TV_series%29> dbo:numberOfEpisodes ?x . <http://dbpedia.org/resource/Battlestar_Galactica_%282004_TV_series%29> dbo:numberOfEpisodes ?y FILTER ( ?y > ?x ) }"
        }
    }, {
        "pattern": "oldest",
        "predicates": ["dbo:birthDate", "dbo:openingYear"],
        "questions": {
            "320": "Who is the oldest child of Meryl Streep?",
            "349": "Which city has the oldest running metro?"
        },
        "Sparql": {
            "Sparql_320": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Meryl_Streep dbo:child ?uri . ?uri dbo:birthDate ?d } ORDER BY ASC(?d) OFFSET 0 LIMIT 1",
            "Sparql_349": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?loc WHERE { ?uri dbo:type dbr:Rapid_transit ; dbo:openingYear ?date ; dbo:location ?loc . ?loc rdf:type dbo:City } ORDER BY ASC(?date) LIMIT 1"
        }
    },  
    {
        "pattern": "past_year",
        "predicates": ["dbp:year"],
        "questions": {
            "68": "Give me all world heritage sites designated within the past two years."
        },
        "Sparql": {
            "Sparql_68": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WorldHeritageSite> . { ?uri <http://dbpedia.org/property/year> '2013'^^xsd:integer . } UNION { ?uri <http://dbpedia.org/property/year> '2014'^^xsd:integer . } }"
        }
    }, {
        "pattern": "pro-european",
        "predicates": ["dbo:ideology"],
        "questions": {
            "163": "Which Greek parties are pro-European?"
        },
        "Sparql": {
            "Sparql_163": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/PoliticalParty> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Greece> ; <http://dbpedia.org/ontology/ideology> <http://dbpedia.org/resource/Pro-Europeanism> }"
        }
    }, {
        "pattern": "second",
        "predicates": ["dbo:elevation"],
        "questions": {
            "165": "What is the second highest mountain on Earth?"
        },
        "Sparql": {
            "Sparql_165": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Mountain> ; <http://dbpedia.org/ontology/elevation> ?elevation } ORDER BY DESC(?elevation) OFFSET 1 LIMIT 1"
        }
    }, {
        "pattern": "smallest_city",
        "predicates": ["skos:broader", "dbo:areaTotal"],
        "questions": {
            "154": "What is the smallest city by area in Germany?"
        },
        "Sparql": {
            "Sparql_154": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX skos: <http://www.w3.org/2004/02/skos/core#> PREFIX dbc: <http://dbpedia.org/resource/Category:> PREFIX dct: <http://purl.org/dc/terms/> SELECT ?city WHERE { ?m skos:broader dbc:Cities_in_Germany . ?city dct:subject ?m ; dbo:areaTotal ?area } ORDER BY ?area LIMIT 1"
        }
    }, {
        "pattern": "spanish",
        "predicates": ["dbo:country"],
        "questions": {
            "345": "Who is starring in Spanish movies produced by Benicio del Toro?"
        },
        "Sparql": {
            "Sparql_345": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?film rdf:type dbo:Film ; dbo:country res:Spain ; dbo:producer res:Benicio_del_Toro ; dbo:starring ?uri . ?uri rdf:type dbo:Person }"
        }
    }, {
        "pattern": "swedish",
        "predicates": ["dbo:country", "dbo:birthPlace"],
        "questions": {
            "94": "Give me all Swedish holidays.",
            "403": "Give me all Swedish oceanographers."
        },
        "Sparql": {
            "Sparql_94": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Holiday> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Sweden> }",
            "Sparql_403": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:field res:Oceanography ; dbo:birthPlace res:Sweden }"
        }
    }, {
        "pattern": "swiss",
        "predicates": ["dbo:location"],
        "questions": {
            "42": "Give me all Swiss non-profit organizations."
        },
        "Sparql": {
            "Sparql_42": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Nonprofit_organization> { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Switzerland> } UNION { ?uri <http://dbpedia.org/ontology/location> ?x . ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Switzerland> } }"
        }
    }, {
        "pattern": "tall",
        "predicates": ["dbo:height"],
        "questions": {
            "287": "How tall is Claudia Schiffer?",
            "363": "How tall is Michael Jordan?",
            "392": "How tall is Amazon Eve?"
        },
        "Sparql": {
            "Sparql_287": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?height WHERE { res:Claudia_Schiffer dbo:height ?height }",
            "Sparql_363": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Michael_Jordan dbo:height ?num }",
            "Sparql_392": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?height WHERE { res:Amazon_Eve dbo:height ?height }"
        }
    }, {
        "pattern": "tallest",
        "predicates": ["dbo:height"],
        "questions": {
            "31": "Who is the tallest player of the Atlanta Falcons?",
            "306": "Who is the tallest basketball player?"
        },
        "Sparql": {
            "Sparql_31": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Atlanta_Falcons> ; <http://dbpedia.org/ontology/height> ?h } ORDER BY DESC(?h) OFFSET 0 LIMIT 1",
            "Sparql_306": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:BasketballPlayer ; dbo:height ?num } ORDER BY DESC(?num) OFFSET 0 LIMIT 1"
        }
    }, {
        "pattern": "top-10",
        "predicates": ["dbp:ign"],
        "questions": {
            "32": "What are the top-10 action role-playing video games according to IGN?"
        },
        "Sparql": {
            "Sparql_32": "SELECT DISTINCT ?uri WHERE { ?uri <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Action_role-playing_video_games> ; <http://dbpedia.org/property/ign> ?score } ORDER BY DESC(?score) LIMIT 10"
        }
    }, {
        "pattern": "total",
        "predicates": ["dbp:employees", "dbo:populationTotal", "dbo:areaTotal"],
        "questions": {
            "111": "What is the total amount of men and women serving in the FDNY?",
            "230": "how much is the total population of  european union?",
            "278": "how big is the total area of North Rhine- Westphalia?",
            "353": "What is the total population of Melbourne, Florida?"
        },
        "Sparql": {
            "Sparql_111": "SELECT DISTINCT ?num WHERE { <http://dbpedia.org/resource/New_York_City_Fire_Department> <http://dbpedia.org/property/employees> ?num }",
            "Sparql_230": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?europop WHERE { dbr:European_Union dbo:populationTotal ?europop }",
            "Sparql_278": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?tarea WHERE { dbr:North_Rhine-Westphalia dbo:areaTotal ?tarea }",
            "Sparql_353": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { <http://dbpedia.org/resource/Melbourne,_Florida> dbo:populationTotal ?uri }"
        }
    }, {
        "pattern": "youngest",
        "predicates": ["dbo:birthDate"],
        "questions": {
            "53": "Who are the four youngest MVP basketball players?",
            "222": "Who is the youngest Darts player?"
        },
        "Sparql": {
            "Sparql_53": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/BasketballPlayer> ; <http://dbpedia.org/ontology/birthDate> ?date ; <http://dbpedia.org/property/highlights> ?h FILTER regex(?h, \"MVP\") } ORDER BY DESC(?date) OFFSET 0 LIMIT 4",
            "Sparql_222": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:DartsPlayer ; dbo:birthDate ?date } ORDER BY DESC(?date) OFFSET 0 LIMIT 1"
        }
    }]
