[{
        "pattern": "admit",
        "predicates": ["dbo:admittancedate"],
        "questions": {
            "89": "When was Alberta admitted as province? [admitted_as=dbo:admittancedate]"
        },
        "Sparql": {
            "Sparql_89": "SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Alberta> <http://dbpedia.org/property/admittancedate> ?date }"
        }
    }, {
        "pattern": "adopt",
        "predicates": ["dbo:currency"],
        "questions": {
            "102": "Which countries adopted the Euro? [adopted=dbo:currency]"
        },
        "Sparql": {
            "Sparql_102": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Euro> } UNION { ?uri <http://dbpedia.org/property/currencyCode> \"EUR\"@en } }"
        }
    }, {
        "pattern": "air",
        "predicates": ["dbo:completionDate"],
        "questions": {
            "226": "When was the last episode of the TV series Friends aired? [aired_at=dbo:completionDate]"
        },
        "Sparql": {
            "Sparql_226": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?date WHERE { dbr:Friends dbo:completionDate ?date }"
        }
    }, {
        "pattern": "assassinate",
        "predicates": ["dbo:deathPlace"],
        "questions": {
            "77": "Where was JFK assassinated? [assassinated=dbo:deathPlace]"
        },
        "Sparql": {
            "Sparql_77": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_F._Kennedy> <http://dbpedia.org/ontology/deathPlace> ?uri }"
        }
    }, {
        "pattern": "attend",
        "predicates": ["dbo:almaMater"],
        "questions": {
            "248": "Which university did Angela Merkel attend? [attend=dbo:almaMater]",
            "266": "Did Arnold Schwarzenegger attend a university? [attend=dbo:almaMater]"
        },
        "Sparql": {
            "Sparql_248": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?university WHERE { res:Angela_Merkel dbo:almaMater ?university }",
            "Sparql_266": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { res:Arnold_Schwarzenegger dbo:almaMater ?x . ?x rdf:type dbo:University }"
        }
    }, {
        "pattern": "belong",
        "predicates": ["dbo:country","dbp:species", "dbo:author"],
        "questions": {
            "59": "Give me all islands that belong to Japan.[belong_to=dbo:country]",
            "255": "Which species does an elephant belong? [belong=dbp:species]",
            "355": "To which artistic movement did the painter of The Three Dancers belong? [belong=dbo:author]"
        },
        "Sparql": {
            "Sparql_59": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Island> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> }",
             "Sparql_255": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?species WHERE { dbr:Elephant dbp:species ?species }",
            "Sparql_355": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Three_Dancers dbo:author ?person . ?person dbo:movement ?uri }"
        }
    },  

    {
        "pattern": "border",
        "predicates": ["dbo:borderingstates"],
        "questions": {
            "36": "Which states border Illinois? [border=dbo:borderingstates]"
        },
        "Sparql": {
            "Sparql_36": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Illinois> <http://dbpedia.org/property/borderingstates> ?uri }"
        }
    }, {
        "pattern": "bear",
        "predicates": ["dbo:birthYear", "dbo:birthDate", "dbo:birthPlace"],
        "questions": {
            "3": "Which people were born in Heraklion? [born_in=dbo:birthPlace]",
            "40": "Give all swimmers that were born in Moscow. [born_in=dbo:birthPlace]",
            "43": "Which presidents were born in 1945? [born_in=dbo:birthDate]",
            "69": "Give me all actors who were born in Paris after 1950. [born_in=dbo:birthPlace]",
            "79": "Show me everyone who was born on Halloween.[born_on=dbo:birthDate]",
            "82": "Which actors were born in Germany? [born_in=dbo:birthPlace]",
            "86": "Give me all actors who were born in Berlin. [born_in=dbo:birthPlace]",
            "139": "Which soccer players were born on Malta? [born_on=dbo:birthPlace]",
            "169": "Which Chess players died in the same place they were born in? [born_in=dbo:birthPlace]",
            "179": "Give me all people that were born in Vienna and died in Berlin. [born_in=dbo:birthPlace]",
            "243": "In which year was Rachel Stevens born? [born=dbo:birthYear]",
            "252": "When was John Adams born? [born=dbo:birthDate]",
            "318": "Was Natalie Portman born in the United States? [born_in=dbo:birthPlace]",
            "348": "Where was Bach born? [born=dbo:birthPlace]"
        },
        "Sparql": {
            "Sparql_3": "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX onto: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type onto:Person ; onto:birthPlace <http://dbpedia.org/resource/Heraklion>. }",
            "Sparql_40": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Swimmer> ; <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Moscow> }",
            "Sparql_43": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/President> ; <http://dbpedia.org/ontology/birthDate> ?date FILTER regex(?date, \"^1945\") }",
            "Sparql_69": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> . ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> . ?uri <http://dbpedia.org/ontology/birthDate> ?date . FILTER ( ?date >= xsd:dateTime('1950-12-31T00:00:00Z')) }",
            "Sparql_79": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Person> { ?uri <http://dbpedia.org/ontology/birthDate> ?date } UNION { ?uri <http://dbpedia.org/property/birthDate> ?date } <http://dbpedia.org/resource/Halloween> <http://dbpedia.org/property/date> ?date }",
            "Sparql_82": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Actor> { ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Germany> } UNION { ?uri <http://dbpedia.org/ontology/birthPlace> ?place . ?place <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> } }",
            "Sparql_86": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Actor> ; <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Berlin> }",
            "Sparql_139": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/SoccerPlayer> ; <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Malta> }",
            "Sparql_169": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/ChessPlayer> ; <http://dbpedia.org/ontology/birthPlace> ?x ; <http://dbpedia.org/ontology/deathPlace> ?y FILTER ( ?x = ?y ) }",
            "Sparql_179": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Vienna> ; <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Berlin> }",
            "Sparql_243": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Rachel_Stevens dbo:birthYear ?uri }",
            "Sparql_252": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:John_Adams dbo:birthDate ?date }",
            "Sparql_318": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Natalie_Portman dbo:birthPlace ?city . ?city dbo:country res:United_States }"
        }
    }, 
    
    {
        "pattern": "build",
        "predicates": ["dbo:beginningDate"],
        "questions": {
            "35": "When was the Statue of Liberty built? [built=dbo:beginningDate]"
        },
        "Sparql": {
            "Sparql_35": "SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Statue_of_Liberty> <http://dbpedia.org/property/beginningDate> ?date }"
        }
    }, {
        "pattern": "bury",
        "predicates": ["dbo:burialPlace", "dbo:restingPlace"],
        "questions": {
            "95": "In which city was the former Dutch queen Juliana buried? [burried=dbo:burialPlace]",
            "333": "Where is Syngman Rhee buried? [burried=dbo:restingPlace]",            
            "359": "Who was buried in the Great Pyramid of Giza? [buried_in=dbo:restingPlace]"

        },
        "Sparql": {
            "Sparql_95": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Juliana_of_the_Netherlands> <http://dbpedia.org/property/burialPlace> ?uri . ?uri a <http://dbpedia.org/ontology/Settlement> }",
            "Sparql_333": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Syngman_Rhee dbo:restingPlace ?uri }",
            "Sparql_359": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { ?uri dbo:restingPlace dbr:Great_Pyramid_of_Giza }"

        }
    }, 

    {
        "pattern": "call",
        "predicates": ["dbo:shipNamesake", "rdf:type", "rdfs:label"],
        "questions": {
            "117": "Which ships were called after Benjamin Franklin? [called_after=dbo:shipNamesake]",
            "128": "Give me all actors called Baldwin. [called=rdf:type]",
            "227": "Is the wife of president Obama called Michelle? [called=rdfs:label]",
            "245": "Was the wife of president Lincoln called Mary? [called=rdfs:label]",
            "358": "Is there a video game called Battle Chess? [called=rdfs:label]"
        },
        "Sparql": {
            "Sparql_117": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/shipNamesake> <http://dbpedia.org/resource/Benjamin_Franklin> }",
            "Sparql_227": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> ASK WHERE { res:Barack_Obama dbo:spouse ?spouse . ?spouse rdfs:label ?name FILTER regex(?name, \"Michelle\") }",
            "Sparql_245": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> ASK WHERE { res:Abraham_Lincoln dbo:spouse ?spouse . ?spouse rdfs:label ?name FILTER regex(?name, \"Mary\") }",
            "Sparql_358": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { ?uri rdf:type dbo:VideoGame ; rdfs:label \"Battle Chess\"@en }"
        }
    }, 
    
    {
        "pattern": "cast",
        "predicates": ["dbo:starring"],
        "questions": {
            "133": "Which actor was casted in the most movies? [casted_in=dbo:starring]"
        },
        "Sparql": {
            "Sparql_133": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> . ?f <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> . ?f <http://dbpedia.org/ontology/starring> ?uri . } ORDER BY DESC(COUNT(DISTINCT(?f))) OFFSET 0 LIMIT 1"
        }
    }, {
        "pattern": "celebrate",
        "predicates": ["rdf:type"],
        "questions": {
            "148": "Which holidays are celebrated around the world? [celebrated_around=rdf:type]",
            "305": "Which holidays are celebrated around the world? [celebrated_around=rdf:type]"
        },
        "Sparql": {
            "Sparql_148": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Holiday }",
            "Sparql_305": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Holiday }"
        }
    }, {
        "pattern": "climb",
        "predicates": ["dbo:firstAscentPerson"],
        "questions": {
            "384": "Who was the first to climb Mount Everest? [climb=dbo:firstAscentPerson]"
        },
        "Sparql": {
            "Sparql_384": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Mount_Everest dbo:firstAscentPerson ?uri }"
        }
    }, {
        "pattern": "come",
        "predicates": ["dbo:knownFor","dbo:nationality"],
        "questions": {
            "258": "How many theories did Albert Einstein come up with? [come_up=dbo:knownFor]",
            "271": "Which country does the creator of Miffy come from? [come_from=dbo:nationality]"
        },
        "Sparql": {
            "Sparql_258": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT (COUNT(?uri) AS ?count) WHERE { dbr:Albert_Einstein dbo:knownFor ?uri }",
            "Sparql_271": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Miffy dbo:creator ?x . ?x dbo:nationality ?uri }"
        }
    }, 
    {
        "pattern": "commence",
        "predicates": ["dbo:date"],
        "questions": {
            "356": "When did Operation Overlord commence? [commence=dbo:date]"
        },
        "Sparql": {
            "Sparql_356": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?d WHERE { res:Operation_Overlord dbo:date ?d }"
        }
    }, {
        "pattern": "complete",
        "predicates": ["dbo:completionDate"],
        "questions": {
            "325": "When was the Titanic completed? [completed=dbo:completionDate]"
        },
        "Sparql": {
            "Sparql_325": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:RMS_Titanic dbo:completionDate ?date }"
        }
    }, {
        "pattern": "compose",
        "predicates": ["dbo:musicComposer"],
        "questions": {
            "259": "Who composed the soundtrack for Cameron's Titanic? [composed_X_for=dbo:musicComposer]",
            "330": "Who composed the music for Harold and Maude? [composed_X_for=dbo:musicComposer]"
        },
        "Sparql": {
            "Sparql_259": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Titanic_(1997_film)> dbo:musicComposer ?uri }",
            "Sparql_330": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Harold_and_Maude dbo:musicComposer ?uri }"
        }
    }, {
        "pattern": "contain",
        "predicates": ["rdfs:label"],
        "questions": {
            "88": "Which music albums contain the song Last Christmas? [contain=rdfs:label]"
        },
        "Sparql": {
            "Sparql_88": "SELECT DISTINCT ?uri WHERE { ?single <http://dbpedia.org/ontology/album> ?uri ; <http://www.w3.org/2000/01/rdf-schema#label> \"Last Christmas\"@en }"
        }
    }, {
        "pattern": "cost",
        "predicates": ["dbo:budget"],
        "questions": {
            "329": "How much did the Lego Movie cost? [cost=dbo:budget]",
            "342": "How much did Pulp Fiction cost? [cost=dbo:budget]"
        },
        "Sparql": {
            "Sparql_329": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?n WHERE { res:The_Lego_Movie dbo:budget ?n }",
            "Sparql_342": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?n WHERE { res:Pulp_Fiction dbo:budget ?n }"
        }
    }, 
    {
        "pattern": "create",
        "predicates": ["dbo:creator", "dbo:author"],
        "questions": {
            "19": "Who created the comic Captain America? [created_the_comic=dbo:creator]",
            "87": "Who created Goofy? [created=dbo:creator]",
            "137": "Which television shows were created by John Cleese? [created_by=dbo:creator]",
            "200": "Who created Wikipedia? [created=dbo:author]",
            "210": "Who created Batman? [created=dbo:creator]",
            "321": "Which television shows were created by Walt Disney? [created_by=dbo:creator]",
            "365": "Who created Family Guy? [created=dbo:creator]"
        },
        "Sparql": {
            "Sparql_19": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Captain_America dbo:creator ?uri }",
            "Sparql_87": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Goofy> <http://dbpedia.org/ontology/creator> ?uri }",
            "Sparql_137": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/TelevisionShow> ; <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/John_Cleese> }",
            "Sparql_200": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Wikipedia dbo:author ?uri }",
            "Sparql_210": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Batman dbo:creator ?uri }",
            "321": "Which television shows were created by Walt Disney? [created_by=dbo:creator]",
            "Sparql_365": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Family_Guy dbo:creator ?uri }"
        }
    }, 

    {
        "pattern": "cross",
        "predicates": ["dbo:crosses"],
        "questions": {
            "48": "Which bridges cross the Seine? [cross=dbo:crosses]",
            "224": "Which river does the Brooklyn Bridge cross? [cross=dbo:crosses]"
        },
        "Sparql": {
            "Sparql_48": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Bridge> ; <http://dbpedia.org/ontology/crosses> <http://dbpedia.org/resource/Seine> }",
            "Sparql_224": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Brooklyn_Bridge dbo:crosses ?uri }"
        }
    }, {
        "pattern": "designate",
        "predicates": ["dbp:year"],
        "questions": {
            "68": "Give me all world heritage sites designated within the past two years. [designated_within=dbp:year]",
            "350": "Who designed the Brooklyn Bridge? [designed=dbo:architect]"
        },
        "Sparql": {
            "Sparql_68": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WorldHeritageSite> . { ?uri <http://dbpedia.org/property/year> '2013'^^xsd:integer . } UNION { ?uri <http://dbpedia.org/property/year> '2014'^^xsd:integer . } }"
        }
    }, {
        "pattern": "design",
        "predicates": ["dbo:architect"],
        "questions": {
            "350": "Who designed the Brooklyn Bridge? [designed=dbo:architect]"        },
        "Sparql": {
            "Sparql_350": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Brooklyn_Bridge dbo:architect ?uri }"
        }
    }, {
        "pattern": "develop",
        "predicates": ["dbp:designer","dbo:developer", "dbo:product"],
        "questions": {
             "2": "Who developed Skype? [developed=dbo:developer]",
            "14": "Which other weapons did the designer of the Uzi develop?",
            "125": "Which software has been developed by organizations founded in California? [developed_by=dbo:developer]",
            "153": "Which weapons did Heckler & Koch develop?",
            "37": "Who developed Minecraft? [developed=dbo:developer]",
            "232": "Who developed the video game World of Warcraft? [developed=dbo:developer]",
            "241": "Who developed Slack? [developed=dbo:product]"
        },
        "Sparql": {
            "Sparql_2": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { res:Skype dbo:developer ?uri. }",
            "Sparql_37": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Minecraft> <http://dbpedia.org/ontology/developer> ?uri }",
            "Sparql_14": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Weapon ; dbp:designer ?x . res:Uzi dbp:designer ?x FILTER ( ?uri != res:Uzi ) }",
            "Sparql_125": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Software> . ?company a <http://dbpedia.org/ontology/Company> . ?uri <http://dbpedia.org/ontology/developer> ?company . ?company <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/California> }",
            "Sparql_153": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Weapon> ; <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Heckler_&_Koch> }",
            "Sparql_232": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:World_of_Warcraft dbo:developer ?uri }",
            "Sparql_241": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { ?uri dbo:product <http://dbpedia.org/resource/Slack_(software)> }"
        }
    }, 
    
    {
        "pattern": "die",
        "predicates": ["dbo:deathPlace","dbo:Diseases"],
        "questions": {
            "7": "Where did Abraham Lincoln die? [die=dbo:deathPlace]",
            "38": "Where did Hillel Slovak die? [die=dbo:deathPlace]",
            "169": "Which Chess players died in the same place they were born in? [die_in=dbo:deathPlace]",
            "292": "In which city did Nikos Kazantzakis die? [die_in=dbo:deathPlace]",
             "372": "What did Bruce Carver die from? [die_from=dbo:Diseases]",
            "399": "In which city did John F. Kennedy die? [die_in=dbo:deathPlace]"
        },
        "Sparql": {
            "Sparql_7": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { res:Abraham_Lincoln dbo:deathPlace ?uri. }",
            "Sparql_38": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hillel_Slovak> <http://dbpedia.org/ontology/deathPlace> ?uri }",
            "Sparql_372": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Bruce_Carver dbo:deathCause ?uri }",
            "Sparql_292": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Nikos_Kazantzakis dbo:deathPlace ?uri . ?uri rdf:type dbo:Town }",
            "Sparql_399": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:deathPlace ?uri . ?uri rdf:type dbo:City }",
            "Sparql_169": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/ChessPlayer> ; <http://dbpedia.org/ontology/birthPlace> ?x ; <http://dbpedia.org/ontology/deathPlace> ?y FILTER ( ?x = ?y ) }"
        }
    }, 
    {
        "pattern": "direct",
        "predicates": ["dbo:director"],
        "questions": {
            "9": "Give me all actors starring in movies directed by and starring William Shatner. [directed_by=dbo:director]",
            "12": "Which movies starring Brad Pitt were directed by Guy Ritchie? [directed_by=dbo:director]",
            "56": "How many movies did Park Chan-wook direct? [direct=dbo:director]",
            "63": "In which films directed by Garry Marshall was Julia Roberts starring? [directed_by=dbo:director]",
            "124": "Which films starring Clint Eastwood did he direct himself? [direct=dbo:director]",
            "213": "Give me all movies directed by Francis Ford Coppola. [directed_by=dbo:director]",
            "282": "Which films did Stanley Kubrick direct? [direct=dbo:director]",
            "286": "Give me all actors starring in movies directed by William Shatner. [directed_by=dbo:director]",
            "389": "Which movies starring Mickey Rourke were directed by Guy Ritchie? [directed_by=dbo:director]"
        },
        "Sparql": {
            "Sparql_9": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { ?x dbo:director res:William_Shatner ; dbo:starring res:William_Shatner { ?x dbo:starring ?uri } UNION { ?x dbp:starring ?uri } }",
            "Sparql_12": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Brad_Pitt ; dbo:director res:Guy_Ritchie }",
            "Sparql_56": "SELECT COUNT(DISTINCT ?uri AS ?uri) WHERE { ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Park_Chan-wook> . }",
            "Sparql_124": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Clint_Eastwood> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Clint_Eastwood> }",
            "Sparql_282": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:director res:Stanley_Kubrick }",
            "Sparql_286": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?x dbo:director res:William_Shatner ; dbo:starring ?uri }",
            "Sparql_389": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Mickey_Rourke ; dbo:director res:Guy_Ritchie }"
        }
    }, {
        "pattern": "discover",
        "predicates": ["dbo:discoverer"],
        "questions": {
            "191": "Who discovered Ceres? [discovered=dbo:discoverer ]",
            "413": "Who discovered Pluto? [discovered=dbo:discoverer ]"
        },
        "Sparql": {
            "Sparql_191": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ceres_(dwarf_planet)> dbo:discoverer ?uri }",
            "Sparql_413": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?uri WHERE { dbr:Pluto dbo:discoverer ?uri }"
        }
    }, {
        "pattern": "dissolve",
        "predicates": ["dbo:dissolutionDate"],
        "questions": {
            "368": "When did the Ming dynasty dissolve? [dissolve=dbo:dissolutionDate]"
        },
        "Sparql": {
            "Sparql_368": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:Ming_dynasty dbo:dissolutionDate ?date }"
        }
    }, {
        "pattern": "eat",
        "predicates": ["yago:WikicatEatingDisorders"],
        "questions": {
            "103": "Give me all types of eating disorders."
        },
        "Sparql": {
            "Sparql_103": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/class/yago/WikicatEatingDisorders> }"
        }
    }, {
        "pattern": "end",
        "predicates": ["dbo:activeYearsEndDate"],
        "questions": {
            "366": "In which city does the Chile Route 68 end? [end=dbo:routeEnd]",
            "388": "When did Boris Becker end his active career? [end=dbo:activeYearsEndDate]"
        },
        "Sparql": {
            "Sparql_388": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?d WHERE { res:Boris_Becker dbo:activeYearsEndDate ?d }",
            "Sparql_366": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Chile_Route_68 dbo:routeEnd ?uri }"
        }
    }, 

    {
        "pattern": "erupt",
        "predicates": ["dbo:eruptionYear"],
        "questions": {
            "47": "Which volcanos in Japan erupted since 2000? [erupted=dbo:eruptionYear]"
        },
        "Sparql": {
            "Sparql_47": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Volcano> ; <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Japan> ; <http://dbpedia.org/ontology/eruptionYear> ?date FILTER ( year(?date) >= 2000 ) }"
        }
    }, {
        "pattern": "establish",
        "predicates": ["dbp:established"],
        "questions": {
            "113": "Give me all libraries established earlier than 1400. [established=dbp:established ]"
        },
        "Sparql": {
            "Sparql_113": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Library> ; <http://dbpedia.org/property/established> ?year FILTER ( ?year < 1400 ) }"
        }
    }, {
        "pattern": "extend_to",
        "predicates": ["dbo:country"],
        "questions": {
            "81": "To which countries does the Himalayan mountain system extend? [extend_to=dbo:country]"
        },
        "Sparql": {
            "Sparql_81": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Himalayas> <http://dbpedia.org/ontology/country> ?uri }"
        }
    }, {
        "pattern": "flow_into",
        "predicates": ["dbo:inflow"],
        "questions": {
            "57": "Which rivers flow into a German lake? [flow_into=dbo:inflow]"
        },
        "Sparql": {
            "Sparql_57": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/River> . ?x <http://dbpedia.org/ontology/inflow> ?uri ; a <http://dbpedia.org/ontology/Lake> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> }"
        }
    }, {
        "pattern": "found",
        "predicates": ["dbp:founded", "dbo:foundedBy"],
        "questions": {
            "92": "When were the Hells Angels founded? [founded=dbp:founded]",
            "190": "Who was the pope that founded the Vatican Television? [founded=dbo:foundedBy]"
        },
        "Sparql": {
            "Sparql_92": "SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Hells_Angels> <http://dbpedia.org/property/founded> ?date }",
            "Sparql_190": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri rdf:type dbo:Pope . res:Vatican_Television_Center dbo:foundedBy ?uri }"
        }
    }, 

    {
        "pattern": "found_in",
        "predicates": ["dbo:formationYear", "dbo:foundationPlace"],
        "questions": {
            "18": "Which organizations were founded in 1950? [founded_in=dbo:formationYear]",
            "125": "Which software has been developed by organizations founded in California? [founded_in=dbo:foundationPlace]",
            "150": "Which organizations were founded in 1930? [found_in=dbo:foundingYear]",
            "263": "Which electronics companies were founded in Beijing? [founded_in=dbo:foundationPlace]"
        },
        "Sparql": {
            "Sparql_18": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation { ?uri dbo:formationYear ?date } UNION { ?uri dbo:foundingYear ?date } UNION { ?uri dbp:foundation ?date } UNION { ?uri dbp:formation ?date } FILTER regex(?date, \"^1950\") }",
            "Sparql_125": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Software> . ?company a <http://dbpedia.org/ontology/Company> . ?uri <http://dbpedia.org/ontology/developer> ?company . ?company <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/California> }",
            "Sparql_150": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Organisation> { ?uri <http://dbpedia.org/ontology/formationYear> ?date } UNION { ?uri <http://dbpedia.org/ontology/foundingYear> ?date } FILTER regex(?date, \"^1930\") }",
            "Sparql_263": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Company ; dbo:industry res:Electronics ; dbo:foundationPlace res:Beijing }"
        }
    },

    {
        "pattern": "graduate_from",
        "predicates": ["dbo:almaMater"],
        "questions": {
            "140": "How many politicians graduated from Columbia University? [graduated_from=dbo:almaMater]"
        },
        "Sparql": {
            "Sparql_140": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Politician> ; <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Columbia_University> }"
        }
    }, {
        "pattern": "grow_in",
        "predicates": ["dbo:growingGrape"],
        "questions": {
            "323": "Which types of grapes grow in Oregon?"
        },
        "Sparql": {
            "Sparql_323": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Oregon_wine dbo:growingGrape ?uri }"
        }
    }, {
        "pattern": "influence",
        "predicates": ["dbo:influencedBy"],
        "questions": {
            "122": "Which programming languages influenced Javascript? [influenced=dbo:influenced]",
            "361": "Did Socrates influence Aristotle? [influence=dbo:influencedBy]"
        },
        "Sparql": {
            "Sparql_122": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/ProgrammingLanguage> ; <http://dbpedia.org/ontology/influenced> <http://dbpedia.org/resource/JavaScript> }",
            "Sparql_361": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Aristotle dbo:influencedBy res:Socrates }"
        }
    }, 
    {
        "pattern": "influence_by",
        "predicates": ["dbo:influencedBy", "dbo:influenced"],
        "questions": {
            "114": "Which programming languages were influenced by Perl? [influenced_by=dbo:influencedBy]"
        },
        "Sparql": {
            "Sparql_114": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/ProgrammingLanguage> { ?uri <http://dbpedia.org/ontology/influencedBy> <http://dbpedia.org/resource/Perl> } UNION { <http://dbpedia.org/resource/Perl> <http://dbpedia.org/ontology/influenced> ?uri } }"
        }
    },

    {
        "pattern": "inspire_by",
        "predicates": ["dbo:influenced"],
        "questions": {
            "339": "Who was Vincent van Gogh inspired by? [inspired_by=dbo:influenced]"
        },
        "Sparql": {
            "Sparql_339": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:influenced res:Vincent_van_Gogh }"
        }
    }, {
        "pattern": "involve_in",
        "predicates": ["dbo:battle"],
        "questions": {
            "324": "Was U.S. president Jackson involved in a war? [involved_in=dbo:battle]"
        },
        "Sparql": {
            "Sparql_324": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Andrew_Jackson dbo:battle ?battle }"
        }
    }, {
        "pattern": "join",
        "predicates": ["dbp:accessioneudate"],
        "questions": {
            "138": "When did Latvia join the EU? [join=dbp:accessioneudate]"
        },
        "Sparql": {
            "Sparql_138": "SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Latvia> <http://dbpedia.org/property/accessioneudate> ?date }"
        }
    }, {
        "pattern": "kill",
        "predicates": ["dbp:conviction"],
        "questions": {
            "99": "Who killed John Lennon? [killed=dbp:conviction]"
        },
        "Sparql": {
            "Sparql_99": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Person> ; <http://dbpedia.org/property/conviction> <http://dbpedia.org/resource/Death_of_John_Lennon> }"
        }
    }, {
        "pattern": "know_for",
        "predicates": ["dbo:knownFor"],
        "questions": {
            "328": "Which scientist is known for the Manhattan Project and the Nobel Peace Prize? [known_for=dbo:knownFor]"
        },
        "Sparql": {
            "Sparql_328": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri dbo:knownFor res:Manhattan_Project ; rdf:type dbo:Scientist ; dbo:knownFor res:Nobel_Peace_Prize }"
        }
    }, {
        "pattern": "launch_from",
        "predicates": ["dbp:launchPad", "dbo:launchSite"],
        "questions": {
            "23": "Which spaceflights were launched from Baikonur? [launched_from=dbp:launchPad]",
            "167": "Which rockets were launched from Baikonur? [launched_from=dbo:launchSite]"
        },
        "Sparql": {
            "Sparql_23": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/launchPad> res:Baikonur_Cosmodrome }",
            "Sparql_167": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Rocket> ; <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Baikonur_Cosmodrome> }"
        }
    }, {
        "pattern": "live",
        "predicates": ["dbo:residence"],
        "questions": {
            "377": "In which city does Sylvester Stallone live? [live=dbo:residence]"
        },
        "Sparql": {
            "Sparql_377": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:City . res:Sylvester_Stallone dbo:residence ?uri }"
        }
    }, 
    {
        "pattern": "live_in",
        "predicates": ["dbo:populationTotal", "dbo:ethnicGroup", "dbo:residence"],
        "questions": {
            "225": "How many people live in Poland? [live_in=dbo:populationTotal]",
            "256": "How many people live in the capital of Australia? [live_in=dbo:populationTotal]",
            "316": "How many ethnic groups live in Slovenia? [live_in=dbo:ethnicGroup]",
            "351": "How many people live in Eurasia? [live_in=dbo:populationTotal]"
        },
        "Sparql": {
            "Sparql_225": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Poland dbo:populationTotal ?uri }",
            "Sparql_256": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Australia dbo:capital ?x . ?x dbo:populationTotal ?num }",
            "Sparql_316": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { res:Slovenia dbo:ethnicGroup ?uri }",
            "Sparql_351": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?population WHERE { res:Eurasia dbo:populationTotal ?population }"
        }
    }, 

    {
        "pattern": "locate",
        "predicates": ["dbo:country", "dbo:state"],
        "questions": {
            "203": "In which country is Mecca located?  [located=dbo:country]",
            "206": "In which state Penn State University is located? [located=dbo:state]"
        },
        "Sparql": {
            "Sparql_203": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Mecca dbo:country ?uri }",
            "Sparql_206": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?s WHERE { dbr:Pennsylvania_State_University dbo:state ?s }"
        }
    }, 
    {
        "pattern": "marry",
        "predicates": ["dbo:spouse"],
        "questions": {
            "211": "Was Sigmund Freud married? [married=dbo:spouse]",
            "244": "How often did Jane Fonda marry? [marry=dbo:spouse]",
            "267": "Is James Bond married? [married=dbo:spouse]"
        },
        "Sparql": {
            "Sparql_211": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> ASK WHERE { dbr:Sigmund_Freud dbo:spouse ?uri }",
            "Sparql_244": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { res:Jane_Fonda dbo:spouse ?uri }",
            "Sparql_267": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:James_Bond dbo:spouse ?uri }"
        }
    },
    {
        "pattern": "marry_to",
        "predicates": ["dbo:spouse", "dbp:spouse"],
        "questions": {
            "17": "Which monarchs were married to a German? [married_to=dbo:spouse]",
            "27": "Who is the daughter of Ingrid Bergman married to? [married_to=dbp:spouse]",
            "152": "Who has Tom Cruise been married to? [married_to=dbo:spouse]",
            "302": "Who was married to president Chirac? [married_to=dbo:spouse]"
        },
        "Sparql": {
            "Sparql_17": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Monarch ; dbo:spouse ?spouse { ?spouse dbo:birthPlace res:Germany } UNION { ?spouse dbo:birthPlace ?p . ?p dbo:country res:Germany } }",
            "Sparql_27": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Ingrid_Bergman dbo:child ?child . ?child <http://dbpedia.org/property/spouse> ?uri }",
            "Sparql_152": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tom_Cruise> }",
            "Sparql_302": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Jacques_Chirac dbo:spouse ?uri }"
        }
    }, 

    {
        "pattern": "need_for",
        "predicates": ["dbo:ingredient"],
        "questions": {
            "199": "Which ingredients do I need for carrot cake? [need_for=dbo:ingredient]"
        },
        "Sparql": {
            "Sparql_199": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Carrot_cake dbo:ingredient ?uri }"
        }
    }, {
        "pattern": "operate_by",
        "predicates": ["dbo:operator"],
        "questions": {
            "231": "Give me all launch pads operated by NASA. [operated_by=dbo:operator]"
        },
        "Sparql": {
            "Sparql_231": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:LaunchPad ; dbo:operator res:NASA }"
        }
    }, {
        "pattern": "originate_in",
        "predicates": ["dbo:origin"],
        "questions": {
            "80": "Which beer originated in Ireland? [originated_in=dbo:origin]"
        },
        "Sparql": {
            "Sparql_80": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Beer> ; <http://dbpedia.org/ontology/origin> <http://dbpedia.org/resource/Beer_in_Ireland> }"
        }
    }, {
        "pattern": "participate",
        "predicates": ["dbo:battle"],
        "questions": {
            "369": "In which military conflicts did Lawrence of Arabia participate? [participate=dbo:battle]"
        },
        "Sparql": {
            "Sparql_369": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:T._E._Lawrence dbo:battle ?uri }"
        }
    }, {
        "pattern": "pay",
        "predicates": ["dbo:currency"],
        "questions": {
            "147": "In which countries can you pay using the West African CFA franc? [pay=dbo:currency]"
        },
        "Sparql": {
            "Sparql_147": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/West_African_CFA_franc> }"
        }
    }, 

    {
        "pattern": "pay_with",
        "predicates": ["dbo:currency"],
        "questions": {
            "257": "In which ancient empire could you pay with cocoa beans? [pay_with=dbo:currency]"
        },
        "Sparql": {
            "Sparql_257": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:currency res:Cocoa_bean }"
        }
    }, 

    {
        "pattern": "play",
        "predicates": ["dbo:genre", "dbp:ballpark", "dbo:instrument", "dbo:starring"],
        "questions": {
            "44": "What kind of music did Lou Reed play? [pay=dbo:genre]",
            "45": "Where do the Red Sox play? [play=dbp:ballpark]",
            "112": "Which actor played Chewbacca? [played=dbo:portrayer]",
            "126": "Which instruments does Cat Stevens play? [play=dbo:instrument]",
            "162": "Who played Agent Smith in Matrix? [played_X_in=dbo:portrayer]",
            "164": "Give me a list of all bandleaders that play trumpet. [play=dbo:instrument]",
            "204": "Who played Gus Fring in Breaking Bad? [play_X_in=dbo:portrayer]",
            "390": "In which films did Julia Roberts as well as Richard Gere play? [play=dbo:starring]"
        },
        "Sparql": {
            "Sparql_44": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lou_Reed> <http://dbpedia.org/ontology/genre> ?uri }",
            "Sparql_45": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Boston_Red_Sox> <http://dbpedia.org/property/ballpark> ?uri }",
            "Sparql_112": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chewbacca> <http://dbpedia.org/ontology/portrayer> ?uri }",
            "Sparql_162": "PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { res:Agent_Smith <http://dbpedia.org/ontology/portrayer> ?uri }",
            "Sparql_126": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cat_Stevens> <http://dbpedia.org/ontology/instrument> ?uri }",
            "Sparql_164": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Bandleader> ; <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Trumpet> }",
            "Sparql_204": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Gus_Fring dbo:portrayer ?uri }",
            "Sparql_390": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Julia_Roberts ; dbo:starring res:Richard_Gere }"
        }
    }, 

    {
        "pattern": "play_in",
        "predicates": ["dbo:starring", "dbo:league"],
        "questions": {
            "39": "What movies does Jesse Eisenberg play in? [pay_in=dbo:starring]",
            "46": "Show a list of soccer clubs that play in the Bundesliga. [play_in=dbo:league]"
        },
        "Sparql": {
            "Sparql_39": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jesse_Eisenberg> }"
        }
    }, 

    {
        "pattern": "play_for",
        "predicates": ["dbo:team"],
        "questions": {
            "334": "Does Neymar play for Real Madrid? [play_for=dbo:team]"
        },
        "Sparql": {
            "Sparql_334": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Neymar dbo:team <http://dbpedia.org/resource/Real_Madrid_C.F.> }"
        }
    }, 

    {
        "pattern": "possess",
        "predicates": ["rdf:type"],
        "questions": {
            "26": "Which U.S. states possess gold minerals? [possess=rdf:type]"
        },
        "Sparql": {
            "Sparql_26": "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatStatesOfTheUnitedStates ; dbp:mineral ?mineral FILTER regex(?mineral, \"gold\", \"i\") }"
        }
    }, {
        "pattern": "produce",
        "predicates": ["dbo:producer", "dbo:product", "dbo:wineProduced"],
        "questions": {
            "50": "How many films did Hal Roach produce? [produce=dbo:producer]",
            "84": "Who produced the most films? [produced=dbo:producer]",
            "184": "Who produced films starring Natalie Portman? [produced=dbo:producer]",
            "253": "Which companies produce hovercrafts? [produce=dbo:product]",
            "387": "Where in France is sparkling wine produced? [produced=dbo:wineProduced]"
        },
        "Sparql": {
            "Sparql_50": "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> }",
            "Sparql_84": "SELECT DISTINCT ?uri WHERE { ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> . ?film <http://dbpedia.org/ontology/producer> ?uri . } ORDER BY DESC(COUNT(?film)) OFFSET 0 LIMIT 1",
            "Sparql_184": "SELECT DISTINCT ?uri WHERE { ?film a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Natalie_Portman> ; <http://dbpedia.org/ontology/producer> ?uri }",
            "Sparql_253": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Company ; dbo:product res:Hovercraft }",
            "Sparql_387": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:wineProduced res:Sparkling_wine ; dbo:location res:France }"
        }
    }, {
        "pattern": "produce_by",
        "predicates": ["dbo:producer", "dbo:director", "dbo:wineProduced"],
        "questions": {
            "161": "Give me all films produced by Hal Roach. [produced_by=dbo:producer]",
            "182": "Give me all films produced by Steven Spielberg with a budget of at least $80 million. [produced_by=dbo:director]",
            "345": "Who is starring in Spanish movies produced by Benicio del Toro? [produced_by=dbo:producer]"
        },
        "Sparql": {
            "Sparql_161": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> }",
            "Sparql_182": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Steven_Spielberg> . ?uri <http://dbpedia.org/ontology/budget> ?b . FILTER( xsd:double(?b) >= 8.0E7 ) }",
            "Sparql_345": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?film rdf:type dbo:Film ; dbo:country res:Spain ; dbo:producer res:Benicio_del_Toro ; dbo:starring ?uri . ?uri rdf:type dbo:Person }"
        }
    }, 

    {
        "pattern": "publish_by",
        "predicates": ["dbo:publisher"],
        "questions": {
            "295": "Give me all video games published by Mean Hamster Software. [published_by=dbo:publisher]",
            "378": "Which books by Kerouac were published by Viking Press? [published_by=dbo:publisher]"
        },
        "Sparql": {
            "Sparql_295": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:VideoGame ; dbo:publisher res:Mean_Hamster_Software }",
            "Sparql_378": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book ; dbo:publisher res:Viking_Press ; dbo:author res:Jack_Kerouac }"
        }
    }, {
        "pattern": "race",
        "predicates": ["rdf:type"],
        "questions": {
            "223": "Is horse racing a sport? [racing=rdf:type]"
        },
        "Sparql": {
            "Sparql_223": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { dbr:Horse_racing rdf:type dbo:Sport }"
        }
    }, {
        "pattern": "record",
        "predicates": ["dbo:recordLabel"],
        "questions": {
            "130": "For which label did Elvis record his first album? [record=dbo:recordLabel]"
        },
        "Sparql": {
            "Sparql_130": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?x rdf:type dbo:Album ; dbo:artist res:Elvis_Presley ; dbo:releaseDate ?y ; dbo:recordLabel ?uri } ORDER BY ASC(?y) OFFSET 0 LIMIT 1"
        }
    }, {
        "pattern": "release",
        "predicates": ["dbo:releaseDate"],
        "questions": {
            "136": "Show me all songs from Bruce Springsteen released between 1980 and 1990. [released=dbo:releaseDate]"
        },
        "Sparql": {
            "Sparql_136": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> . ?uri <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Bruce_Springsteen> . ?uri <http://dbpedia.org/ontology/releaseDate> ?date . FILTER (?date >= '1980-01-01'^^xsd:date && ?date <= '1990-12-31'^^xsd:date) }"
        }
    }, {
        "pattern": "run_through",
        "predicates": ["dbo:country"],
        "questions": {
            "55": "Give me the capitals of all countries that the Himalayas run through. [run_through=dbo:country]"
        },
        "Sparql": {
            "Sparql_55": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Himalayas> <http://dbpedia.org/ontology/country> ?country . ?country <http://dbpedia.org/ontology/capital> ?uri }"
        }
    }, {
        "pattern": "serve",
        "predicates": ["dbo:targetAirport"],
        "questions": {
            "8": "Which airports does Air China serve? [serve=dbo:targetAirport]",
            "111": "What is the total amount of men and women serving in the FDNY?",
            "196": "Which airports does Yeti Airlines serve? [serve=dbo:targetAirport]",
            "373": "Which subsidiary of Lufthansa serves both Dortmund and Berlin Tegel? [serves=dbo:targetAirport]"
        },
        "Sparql": {
            "Sparql_8": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Air_China dbo:targetAirport ?uri }",
            "Sparql_111": "SELECT DISTINCT ?num WHERE { <http://dbpedia.org/resource/New_York_City_Fire_Department> <http://dbpedia.org/property/employees> ?num }",
            "Sparql_196": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Yeti_Airlines dbo:targetAirport ?uri }",
            "Sparql_373": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Lufthansa dbo:subsidiary ?uri . ?uri dbo:targetAirport res:Dortmund_Airport ; dbo:targetAirport res:Berlin_Tegel_Airport }"
        }
    }, {
        "pattern": "speak",
        "predicates": ["dbo:language"],
        "questions": {
            "406": "In which countries do people speak Japanese? [speak=dbo:language]"
        },
        "Sparql": {
            "Sparql_406": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Country ; dbo:language res:Japanese_language }"
        }
    }, {
        "pattern": "speak_in",
        "predicates": ["dbo:spokenIn", "dbo:language"],
        "questions": {
            "187": "Which languages are spoken in Estonia? [spoken_in=dbo:spokenIn]",
            "307": "How many languages are spoken in Turkmenistan? [spoken_in=dbo:language]",
            "385": "How many languages are spoken in Colombia? [spoken_in=dbo:language]"
        },
        "Sparql": {
            "Sparql_187": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/spokenIn> <http://dbpedia.org/resource/Estonia> }",
            "Sparql_307": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?x) AS ?c) WHERE { res:Turkmenistan dbo:language ?x }",
            "Sparql_385": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri rdf:type dbo:Language . res:Colombia dbo:language ?uri }"
        }
    }, {
        "pattern": "stand_for",
        "predicates": ["dbo:abbreviation"],
        "questions": {
            "159": "What does ICRO stand for? [stand_fordbo:abbreviation]",
            "322": "What does IYCM stand for? [stand_for=dbo:abbreviation]"
        },
        "Sparql": {
            "Sparql_159": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/abbreviation> \"ICRO\" }",
            "Sparql_322": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:abbreviation \"IYCM\" }"
        }
    }, {
        "pattern": "star",
        "predicates": ["dbo:starring"],
        "questions": {
            "70": "Which movies star both Liz Taylor and Richard Burton? [star=dbo:starring]"
        },
        "Sparql": {
            "Sparql_70": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Elizabeth_Taylor> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_Burton> }"
        }
    }, {
        "pattern": "star",
        "predicates": ["dbo:starring"],
        "questions": {
            "12": "Which movies starring Brad Pitt were directed by Guy Ritchie? [starring=dbo:starring]",
            "63": "In which films directed by Garry Marshall was Julia Roberts starring? [starring=dbo:starring]",
            "124": "Which films starring Clint Eastwood did he direct himself? [starring=dbo:starring]",
            "131": "Is Christian Bale starring in Batman Begins? [starring=dbo:starring]",
            "184": "Who produced films starring Natalie Portman? [starring=dbo:starring]",
            "389": "Which movies starring Mickey Rourke were directed by Guy Ritchie? [starring=dbo:starring]"
        },
        "Sparql": {
            "Sparql_63": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Julia_Roberts> ; <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Garry_Marshall> }",
            "Sparql_124": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Clint_Eastwood> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Clint_Eastwood> }",
            "Sparql_131": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Batman_Begins dbo:starring res:Christian_Bale }",
            "Sparql_184": "SELECT DISTINCT ?uri WHERE { ?film a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Natalie_Portman> ; <http://dbpedia.org/ontology/producer> ?uri }",
            "Sparql_389": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Mickey_Rourke ; dbo:director res:Guy_Ritchie }"
        }
    }, 

    {
        "pattern": "star_in",
        "predicates": ["dbo:starring"],
        "questions": {
            "9": "Give me all actors starring in movies directed by and starring William Shatner. [starring_in=dbo:starring]",
            "286": "Give me all actors starring in movies directed by William Shatner. [starring_in=dbo:starring]",
            "314": "Is Christian Bale starring in Velvet Goldmine? [starring_in=dbo:starring]",
            "345": "Who is starring in Spanish movies produced by Benicio del Toro? [starring_in=dbo:starring]",
            "412": "Give me all actors starring in Last Action Hero. [starring_in=dbo:starring]"
        },
        "Sparql": {
            "Sparql_9": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { ?x dbo:director res:William_Shatner ; dbo:starring res:William_Shatner { ?x dbo:starring ?uri } UNION { ?x dbp:starring ?uri } }",
            "Sparql_286": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?x dbo:director res:William_Shatner ; dbo:starring ?uri }",
            "Sparql_314": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Velvet_Goldmine dbo:starring res:Christian_Bale }",
            "Sparql_345": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?film rdf:type dbo:Film ; dbo:country res:Spain ; dbo:producer res:Benicio_del_Toro ; dbo:starring ?uri . ?uri rdf:type dbo:Person }",
            "Sparql_412": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Last_Action_Hero dbo:starring ?uri }"
        }
    },
    {
        "pattern": "start",
        "predicates": ["dbo:sourceCountry", "dbp:date"],
        "questions": {
            "205": "In which country does the Nile start? [start=dbo:sourceCountry]",
            "281": "When will start the final match of the football world cup 2018 [start=dbp:date]?",
            "395": "In which country does the Ganges start? [start=dbo:sourceCountry]"
        },
        "Sparql": {
            "Sparql_205": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Nile dbo:sourceCountry ?uri }",
            "Sparql_281": "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?Date WHERE { dbr:2018_FIFA_World_Cup dbp:date ?Date } ORDER BY DESC(?Date) LIMIT 1",
            "Sparql_395": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Ganges dbo:sourceCountry ?uri }"
        }
    },

    {
        "pattern": "study_in",
        "predicates": ["dbo:almaMater"],
        "questions": {
            "100": "Which writers studied in Istanbul? [studied_in=dbo:almaMater]"
        },
        "Sparql": {
            "Sparql_100": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Writer> { ?uri <http://dbpedia.org/ontology/almaMater> ?x } UNION { ?uri <http://dbpedia.org/ontology/education> ?x } { ?x <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Istanbul> } UNION { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Istanbul> } }"
        }
    }, {
        "pattern": "study",
        "predicates": ["dbo:almaMater"],
        "questions": {
            "67": "Where did the architect of the Eiffel Tower study? [study=dbo:almaMater]"
        },
        "Sparql": {
            "Sparql_67": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eiffel_Tower> <http://dbpedia.org/ontology/architect> ?x . ?x <http://dbpedia.org/property/almaMater> ?uri }"
        }
    }, {
        "pattern": "succeed",
        "predicates": ["dbo:successor"],
        "questions": {
            "72": "Which pope succeeded John Paul II? [succeeded=dbo:successor]"
        },
        "Sparql": {
            "Sparql_72": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pope_John_Paul_II> <http://dbpedia.org/property/successor> ?uri }"
        }
    }, {
        "pattern": "pay",
        "predicates": ["dbo:currency"],
        "questions": {
            "147": "In which countries can you pay using the West African CFA franc? [ pay=dbo:currency]"
        },
        "Sparql": {
            "Sparql_147": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/West_African_CFA_franc> }"
        }
    }, {
        "pattern": "win",
        "predicates": ["dbo:award"],
        "questions": {
            "33": "Give me all writers that won the Nobel Prize in literature.[won=dbo:award]",
            "221": "Which awards did Douglas Hofstadter win? [win=dbo:award]",
            "309": "Did Kaurismäki ever win the Grand Prix at Cannes? [win=dbo:award]",
            "326": "Did Tesla win a nobel prize in physics? [win=bo:award]"
        },
        "Sparql": {
            "Sparql_33": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Writer> ; <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Nobel_Prize_in_Literature> }",
            "Sparql_221": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Douglas_Hofstadter dbo:award ?uri }",
            "Sparql_309": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Aki_Kaurismäki dbo:award <http://dbpedia.org/resource/Grand_Prix_(Cannes_Film_Festival)> }",
            "Sparql_326": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Nikola_Tesla dbo:award res:Nobel_Prize_in_Physics }"
        }
    }, {
        "pattern": "write",
        "predicates": ["dbp:editor", "dbo:programmingLanguage", "dbo:author", "dbo:writer", "dbo:composer"],
        "questions": {
            "21": "Who wrote the book The pillars of the Earth? [wrote=dbo:author]",
            "121": "Which poet wrote the most books? [wrote=dbo:author]",
            "123": "Which musician wrote the most books? [wrote=dbo:author]",
            "129": "Who wrote The Hunger Games? [wrote=dbo:author]",
            "195": "Who wrote the book Les Piliers de la terre? [wrote=dbo:author]",
            "247": "In which programming language is GIMP written? [written=dbo:programmingLanguage]",
            "335": "Who wrote the book The Pillars of the Earth? [wrote=dbo:author]",
            "379": "Who wrote the song Hotel California? [wrote=dbo:writer]",
            "383": "Show me the book that Muhammad Ali wrote. [wrote=dbo:author]",
            "397": "Who wrote the Game of Thrones theme? [wrote=dbo:composer]",
            "401": "Who writes the Farmers' Almanac? [writes=dbp:editor]"
        },
        "Sparql": {
            "Sparql_21": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { res:The_Pillars_of_the_Earth dbo:author ?uri }",
            "Sparql_121": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Poet> . ?x <http://dbpedia.org/ontology/author> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> . } ORDER BY DESC(COUNT(?x)) OFFSET 0 LIMIT 1",
            "Sparql_123": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Musician> . ?x <http://dbpedia.org/ontology/author> ?uri . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> . } ORDER BY DESC(COUNT(?x)) OFFSET 0 LIMIT 1",
            "Sparql_129": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Hunger_Games> <http://dbpedia.org/property/author> ?uri }",
            "Sparql_195": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Pillars_of_the_Earth dbo:author ?uri }",
            "Sparql_247": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:GIMP dbo:programmingLanguage ?uri }",
            "Sparql_335": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Pillars_of_the_Earth dbo:author ?uri }",
            "Sparql_379": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Hotel_California dbo:writer ?uri }",
            "Sparql_383": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book ; dbo:author res:Muhammad_Ali }",
            "Sparql_397": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Game_of_Thrones dbo:composer ?uri }",
            "Sparql_401": "PREFIX dbp: <http://dbpedia.org/property/> SELECT ?uri WHERE { <http://dbpedia.org/resource/Farmers'_Almanac> dbp:editor ?uri }"
        }
    }, {
        "pattern": "write_by",
        "predicates": ["dbo:author"],
        "questions": {
            "109": "Give me all books written by Danielle Steel. [written_by=dbo:author]",
            "119": "What other books have been written by the author of The Fault in Our Stars? [written_by=dbo:author]"
        },
        "Sparql": {
            "Sparql_109": "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Book> ; <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Danielle_Steel> }",
            "Sparql_119": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?books WHERE { ?books dbo:author <http://dbpedia.org/resource/John_Green_(author)> }"
        }
    }]
