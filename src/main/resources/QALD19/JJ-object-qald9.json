[ {
  "pattern" : "active",
  "predicates" : [ ],
  "questions" : {
    "388" : "When did Boris Becker end his active career?"
  },
  "Sparql" : {
    "Sparql_388" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?d WHERE { res:Boris_Becker dbo:activeYearsEndDate ?d }"
  }
}, {
  "pattern" : "alive",
  "predicates" : [ ],
  "questions" : {
    "235" : "Is Frank Herbert still alive?"
  },
  "Sparql" : {
    "Sparql_235" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { OPTIONAL { res:Frank_Herbert dbo:deathDate ?date } FILTER ( ! bound(?date) ) }"
  }
}, {
  "pattern" : "alma",
  "predicates" : [ ],
  "questions" : {
    "194" : "What is the alma mater of the chancellor of Germany Angela Merkel?"
  },
  "Sparql" : {
    "Sparql_194" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Almamater WHERE { dbr:Angela_Merkel dbo:almaMater ?Almamater }"
  }
}, {
  "pattern" : "ancient",
  "predicates" : [ ],
  "questions" : {
    "257" : "In which ancient empire could you pay with cocoa beans?"
  },
  "Sparql" : {
    "Sparql_257" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:currency res:Cocoa_bean }"
  }
}, {
  "pattern" : "artistic",
  "predicates" : [ ],
  "questions" : {
    "355" : "To which artistic movement did the painter of The Three Dancers belong?"
  },
  "Sparql" : {
    "Sparql_355" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Three_Dancers dbo:author ?person . ?person dbo:movement ?uri }"
  }
}, {
  "pattern" : "australian",
  "predicates" : [ "Australia"],
  "questions" : {
    "71" : "Give me all Australian nonprofit organizations.",
    "101" : "Give me all Australian metalcore bands."
  },
  "Sparql" : {
    "Sparql_71" : "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Nonprofit_organization> { ?uri <http://dbpedia.org/ontology/locationCountry> <http://dbpedia.org/resource/Australia> } UNION { ?uri <http://dbpedia.org/ontology/location> ?x . ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> } }",
    "Sparql_101" : "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Band> ; <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Metalcore> { ?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Australia> } UNION { ?uri <http://dbpedia.org/ontology/hometown> ?h . ?h <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> } }"
  }
}, {
  "pattern" : "bad",
  "predicates" : [ ],
  "questions" : {
    "338" : "Does Breaking Bad have more episodes than Game of Thrones?"
  },
  "Sparql" : {
    "Sparql_338" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Breaking_Bad dbo:numberOfEpisodes ?x . res:Game_of_Thrones dbo:numberOfEpisodes ?y FILTER ( ?y > ?x ) }"
  }
}, {
  "pattern" : "big",
  "predicates" : [ ],
  "questions" : {
    "278" : "how big is the total area of North Rhine- Westphalia?"
  },
  "Sparql" : {
    "Sparql_278" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?tarea WHERE { dbr:North_Rhine-Westphalia dbo:areaTotal ?tarea }"
  }
}, {
  "pattern" : "bigger",
  "predicates" : [ ],
  "questions" : {
    "346" : "Is Lake Baikal bigger than the Great Bear Lake?"
  },
  "Sparql" : {
    "Sparql_346" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Lake_Baikal dbo:areaTotal ?a1 . res:Great_Bear_Lake dbo:areaTotal ?a2 FILTER ( ?a1 > ?a2 ) }"
  }
}, {
  "pattern" : "biggest",
  "predicates" : [ ],
  "questions" : {
    "207" : "What is the biggest stadium in Spain?"
  },
  "Sparql" : {
    "Sparql_207" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Stadium ; dbo:location res:Spain ; dbo:seatingCapacity ?n } ORDER BY DESC(?n) OFFSET 0 LIMIT 1"
  }
}, {
  "pattern" : "canadian",
  "predicates" : [ "Canada" ],
  "questions" : {
    "394" : "Give me all Canadian Grunge record labels."
  },
  "Sparql" : {
    "Sparql_394" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:RecordLabel ; dbo:genre res:Grunge ; dbo:country res:Canada }"
  }
}, {
  "pattern" : "comic",
  "predicates" : [ ],
  "questions" : {
    "19" : "Who created the comic Captain America?"
  },
  "Sparql" : {
    "Sparql_19" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Captain_America dbo:creator ?uri }"
  }
}, {
  "pattern" : "common",
  "predicates" : [ ],
  "questions" : {
    "344" : "Do Urdu and Persian have a common root?"
  },
  "Sparql" : {
    "Sparql_344" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> ASK WHERE { dbr:Urdu dbo:languageFamily ?uri . dbr:Persian_language dbo:languageFamily ?uri }"
  }
}, {
  "pattern" : "cuban",
  "predicates" : [ ],
  "questions" : {
    "198" : "Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?"
  },
  "Sparql" : {
    "Sparql_198" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Cuban_Missile_Crisis dbo:date ?x . res:Bay_of_Pigs_Invasion dbo:date ?y FILTER ( ?x < ?y ) }"
  }
}, {
  "pattern" : "current",
  "predicates" : [ ],
  "questions" : {
    "202" : "Who is the current federal minister of finance in Germany?"
  },
  "Sparql" : {
    "Sparql_202" : "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?leader WHERE { <http://dbpedia.org/resource/Federal_Ministry_of_Finance_(Germany)> dbo:leader ?leader }"
  }
}, {
  "pattern" : "danish",
  "predicates" : [ ],
  "questions" : {
    "11" : "Give me all Danish films.",
    "51" : "Give me all Danish movies."
  },
  "Sparql" : {
    "Sparql_11" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:country res:Denmark }",
    "Sparql_51" : "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Denmark> }"
  }
}, {
  "pattern" : "deep",
  "predicates" : [ ],
  "questions" : {
    "28" : "How deep is Lake Placid?"
  },
  "Sparql" : {
    "Sparql_28" : "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Lake_Placid_(Texas)> dbo:maximumDepth ?n }"
  }
}, {
  "pattern" : "densty",
  "predicates" : [ ],
  "questions" : {
    "288" : "how much is the population densty rank of germany?"
  },
  "Sparql" : {
    "Sparql_288" : "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?rank WHERE { dbr:Germany dbp:populationDensityRank ?rank }"
  }
}, {
  "pattern" : "doctoral",
  "predicates" : [ ],
  "questions" : {
    "337" : "Who was the doctoral supervisor of Albert Einstein?"
  },
  "Sparql" : {
    "Sparql_337" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Albert_Einstein dbo:doctoralAdvisor ?uri }"
  }
}, {
  "pattern" : "earlier",
  "predicates" : [ ],
  "questions" : {
    "113" : "Give me all libraries established earlier than 1400.",
    "198" : "Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?"
  },
  "Sparql" : {
    "Sparql_113" : "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Library> ; <http://dbpedia.org/property/established> ?year FILTER ( ?year < 1400 ) }",
    "Sparql_198" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Cuban_Missile_Crisis dbo:date ?x . res:Bay_of_Pigs_Invasion dbo:date ?y FILTER ( ?x < ?y ) }"
  }
}, {
  "pattern" : "english",
  "predicates" : [ ],
  "questions" : {
    "145" : "Show me all English Gothic buildings in Kent."
  },
  "Sparql" : {
    "Sparql_145" : "SELECT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Building> ; <http://dbpedia.org/ontology/architecturalStyle> <http://dbpedia.org/resource/English_Gothic_architecture> ; <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Kent> }"
  }
}, {
  "pattern" : "ethnic",
  "predicates" : [ ],
  "questions" : {
    "316" : "How many ethnic groups live in Slovenia?"
  },
  "Sparql" : {
    "Sparql_316" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { res:Slovenia dbo:ethnicGroup ?uri }"
  }
}, {
  "pattern" : "european",
  "predicates" : [ ],
  "questions" : {
    "230" : "how much is the total population of  european union?"
  },
  "Sparql" : {
    "Sparql_230" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?europop WHERE { dbr:European_Union dbo:populationTotal ?europop }"
  }
}, {
  "pattern" : "federal",
  "predicates" : [ ],
  "questions" : {
    "78" : "Give me all federal chancellors of Germany.",
    "202" : "Who is the current federal minister of finance in Germany?"
  },
  "Sparql" : {
    "Sparql_78" : "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Person> { ?uri <http://dbpedia.org/ontology/office> \"Chancellor of Germany\" } UNION { ?uri <http://dbpedia.org/property/office> <http://dbpedia.org/resource/Chancellor_of_Germany> } }",
    "Sparql_202" : "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?leader WHERE { <http://dbpedia.org/resource/Federal_Ministry_of_Finance_(Germany)> dbo:leader ?leader }"
  }
}, {
  "pattern" : "fifth",
  "predicates" : [ ],
  "questions" : {
    "218" : "when was the founding date of french fifth republic?"
  },
  "Sparql" : {
    "Sparql_218" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?ff WHERE { dbr:French_Fifth_Republic dbo:foundingDate ?ff }"
  }
}, {
  "pattern" : "final",
  "predicates" : [ ],
  "questions" : {
    "281" : "When will start the final match of the football world cup 2018?",
    "341" : "What was the final result of the War of the Roses?"
  },
  "Sparql" : {
    "Sparql_281" : "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?Date WHERE { dbr:2018_FIFA_World_Cup dbp:date ?Date } ORDER BY DESC(?Date) LIMIT 1",
    "Sparql_341" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT DISTINCT ?result WHERE { ?uri dbo:isPartOfMilitaryConflict dbr:Wars_of_the_Roses ; dbo:result ?result ; dbo:date ?date } ORDER BY DESC(?date) OFFSET 0 LIMIT 1"
  }
}, {
  "pattern" : "first",
  "predicates" : [ ],
  "questions" : {
    "130" : "For which label did Elvis record his first album?",
    "158" : "List all episodes of the first season of the HBO television series The Sopranos!",
    "219" : "Who was the first King of England?",
    "331" : "List all episodes of the first season of the HBO television series The Sopranos.",
    "384" : "Who was the first to climb Mount Everest?",
    "409" : "What was the first Queen album?",
    "410" : "What was the first name of the band Queens of the Stone Age?"
  },
  "Sparql" : {
    "Sparql_130" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?x rdf:type dbo:Album ; dbo:artist res:Elvis_Presley ; dbo:releaseDate ?y ; dbo:recordLabel ?uri } ORDER BY ASC(?y) OFFSET 0 LIMIT 1",
    "Sparql_158" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:The_Sopranos ; dbo:seasonNumber 1 }",
    "Sparql_219" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Royalty ; rdf:type yago:WikicatEnglishMonarchs ; dbo:activeYearsStartYear ?date } ORDER BY ASC(?date) OFFSET 0 LIMIT 1",
    "Sparql_331" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:The_Sopranos ; dbo:seasonNumber 1 }",
    "Sparql_384" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Mount_Everest dbo:firstAscentPerson ?uri }",
    "Sparql_409" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Album ; dbo:artist <http://dbpedia.org/resource/Queen_(band)> ; dbo:releaseDate ?d } ORDER BY ASC(?d) OFFSET 0 LIMIT 1",
    "Sparql_410" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?name WHERE { res:Queens_of_the_Stone_Age dbo:alias ?name }"
  }
}, {
  "pattern" : "former",
  "predicates" : [ ],
  "questions" : {
    "95" : "In which city was the former Dutch queen Juliana buried?"
  },
  "Sparql" : {
    "Sparql_95" : "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Juliana_of_the_Netherlands> <http://dbpedia.org/property/burialPlace> ?uri . ?uri a <http://dbpedia.org/ontology/Settlement> }"
  }
}, {
  "pattern" : "french",
  "predicates" : [ ],
  "questions" : {
    "218" : "when was the founding date of french fifth republic?",
    "285" : "Who is the mayor of the capital of French Polynesia?"
  },
  "Sparql" : {
    "Sparql_218" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?ff WHERE { dbr:French_Fifth_Republic dbo:foundingDate ?ff }",
    "Sparql_285" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:French_Polynesia dbo:capital ?x . ?x dbo:mayor ?uri }"
  }
}, {
  "pattern" : "frequent",
  "predicates" : [ ],
  "questions" : {
    "52" : "What is the most frequent cause of death?"
  },
  "Sparql" : {
    "Sparql_52" : "SELECT DISTINCT ?x WHERE { ?uri <http://dbpedia.org/ontology/deathCause> ?x . } ORDER BY DESC(COUNT(DISTINCT ?uri)) OFFSET 0 LIMIT 1"
  }
}, {
  "pattern" : "german",
  "predicates" : [ "German"],
  "questions" : {
    "17" : "Which monarchs were married to a German?",
    "57" : "Which rivers flow into a German lake?",
    "185" : "Give me all breeds of the German Shepherd dog."
  },
  "Sparql" : {
    "Sparql_17" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Monarch ; dbo:spouse ?spouse { ?spouse dbo:birthPlace res:Germany } UNION { ?spouse dbo:birthPlace ?p . ?p dbo:country res:Germany } }",
    "Sparql_57" : "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/River> . ?x <http://dbpedia.org/ontology/inflow> ?uri ; a <http://dbpedia.org/ontology/Lake> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> }",
    "Sparql_185" : "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/breed> <http://dbpedia.org/resource/German_Shepherd> }"
  }
}, {
  "pattern" : "gothic",
  "predicates" : [ ],
  "questions" : {
    "145" : "Show me all English Gothic buildings in Kent."
  },
  "Sparql" : {
    "Sparql_145" : "SELECT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Building> ; <http://dbpedia.org/ontology/architecturalStyle> <http://dbpedia.org/resource/English_Gothic_architecture> ; <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Kent> }"
  }
}, {
  "pattern" : "greek",
  "predicates" : [ ],
  "questions" : {
    "163" : "Which Greek parties are pro-European?"
  },
  "Sparql" : {
    "Sparql_163" : "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/PoliticalParty> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Greece> ; <http://dbpedia.org/ontology/ideology> <http://dbpedia.org/resource/Pro-Europeanism> }"
  }
}, {
  "pattern" : "heaviest",
  "predicates" : [ ],
  "questions" : {
    "186" : "Who is the heaviest player of the Chicago Bulls?"
  },
  "Sparql" : {
    "Sparql_186" : "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Person> ; <http://dbpedia.org/ontology/weight> ?num { ?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Chicago_Bulls> } UNION { ?uri <http://dbpedia.org/property/draftTeam> <http://dbpedia.org/resource/Chicago_Bulls> } UNION { ?uri <http://dbpedia.org/ontology/draftTeam> <http://dbpedia.org/resource/Chicago_Bulls> } } ORDER BY DESC(?num) OFFSET 0 LIMIT 1"
  }
}, {
  "pattern" : "heavy",
  "predicates" : [ ],
  "questions" : {
    "156" : "How heavy is Jupiter's lightest moon?"
  },
  "Sparql" : {
    "Sparql_156" : "SELECT DISTINCT ?n WHERE { ?uri <http://dbpedia.org/property/satelliteOf> <http://dbpedia.org/resource/Jupiter> ; <http://dbpedia.org/ontology/mass> ?n } ORDER BY ASC(?n) OFFSET 0 LIMIT 1"
  }
}, {
  "pattern" : "high",
  "predicates" : [ ],
  "questions" : {
    "298" : "How high is the lighthouse in Colombo?",
    "304" : "How high is the Yokohama Marine Tower?"
  },
  "Sparql" : {
    "Sparql_298" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Colombo_Lighthouse dbo:height ?num }",
    "Sparql_304" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Yokohama_Marine_Tower dbo:height ?num }"
  }
}, {
  "pattern" : "higher",
  "predicates" : [ ],
  "questions" : {
    "34" : "Show me all basketball players that are higher than 2 meters.",
    "174" : "Which mountains are higher than the Nanga Parbat?"
  },
  "Sparql" : {
    "Sparql_34" : "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/BasketballPlayer> ; <http://dbpedia.org/ontology/height> ?n FILTER ( ?n > 2.0 ) }",
    "Sparql_174" : "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nanga_Parbat> <http://dbpedia.org/ontology/elevation> ?elevation . ?uri a <http://dbpedia.org/ontology/Mountain> { ?uri <http://dbpedia.org/ontology/elevation> ?otherelevation } UNION { ?uri <http://dbpedia.org/property/elevationM> ?otherelevation } FILTER ( ?otherelevation > ?elevation ) }"
  }
}, {
  "pattern" : "highest",
  "predicates" : [ ],
  "questions" : {
    "16" : "Which state of the USA has the highest population density?",
    "22" : "Which state of the United States of America has the highest density?",
    "65" : "What is the highest place of the Urals?",
    "120" : "What is the highest mountain?",
    "165" : "What is the second highest mountain on Earth?",
    "201" : "What is the highest mountain in Saxony Germany?",
    "289" : "What is the highest mountain in Italy?",
    "400" : "What is the highest mountain in Australia?",
    "407" : "Which of Tim Burton's films had the highest budget?"
  },
  "Sparql" : {
    "Sparql_16" : "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:WikicatStatesOfTheUnitedStates ; dbp:densityrank ?rank } ORDER BY ASC(?rank) LIMIT 1",
    "Sparql_22" : "PREFIX yago: <http://dbpedia.org/class/yago/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri dbp:densityrank ?density } ORDER BY ASC(?density) LIMIT 1",
    "Sparql_65" : "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ural_Mountains> <http://dbpedia.org/property/highest> ?uri }",
    "Sparql_120" : "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Mountain> ; <http://dbpedia.org/ontology/elevation> ?elevation } ORDER BY DESC(?elevation) OFFSET 0 LIMIT 1",
    "Sparql_165" : "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Mountain> ; <http://dbpedia.org/ontology/elevation> ?elevation } ORDER BY DESC(?elevation) OFFSET 1 LIMIT 1",
    "Sparql_201" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?m WHERE { ?m dbo:mountainRange dbr:Ore_Mountains ; dbo:elevation ?height } ORDER BY DESC(?height) LIMIT 1",
    "Sparql_289" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Mountain ; dbo:locatedInArea res:Italy ; dbo:elevation ?num } ORDER BY DESC(?num) OFFSET 0 LIMIT 1",
    "Sparql_400" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Mountain ; dbo:locatedInArea res:Australia ; dbo:elevation ?elevation } ORDER BY DESC(?elevation) LIMIT 1",
    "Sparql_407" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:director res:Tim_Burton ; dbo:budget ?b } ORDER BY ?b OFFSET 0 LIMIT 1"
  }
}, {
  "pattern" : "himalayan",
  "predicates" : [ ],
  "questions" : {
    "81" : "To which countries does the Himalayan mountain system extend?"
  },
  "Sparql" : {
    "Sparql_81" : "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Himalayas> <http://dbpedia.org/ontology/country> ?uri }"
  }
}, {
  "pattern" : "indian",
  "predicates" : [ "dbo:location res:India" ],
  "questions" : {
    "269" : "Which Indian company has the most employees?"
  },
  "Sparql" : {
    "Sparql_269" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Company ; dbo:location res:India ; dbo:numberOfEmployees ?n } ORDER BY DESC(?n) OFFSET 0 LIMIT 1"
  }
}, {
  "pattern" : "large",
  "predicates" : [ ],
  "questions" : {
    "209" : "How large is the area of UK?"
  },
  "Sparql" : {
    "Sparql_209" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?area WHERE { dbr:United_Kingdom dbo:areaTotal ?area }"
  }
}, {
  "pattern" : "largest",
  "predicates" : [ ],
  "questions" : {
    "98" : "What is the largest metropolitan area in Washington state?",
    "166" : "Is Egypts largest city also its capital?",
    "188" : "What is the largest country in the world?",
    "189" : "What is the largest city in america?",
    "284" : "How many inhabitants does the largest city in Canada have?",
    "301" : "What is the largest city in Australia?"
  },
  "Sparql" : {
    "Sparql_98" : "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Washington_(state)> <http://dbpedia.org/property/largestmetro> ?uri }",
    "Sparql_166" : "ASK WHERE { <http://dbpedia.org/resource/Egypt> <http://dbpedia.org/ontology/largestCity> ?large ; <http://dbpedia.org/ontology/capital> ?capital FILTER ( ?large = ?capital ) }",
    "Sparql_188" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Country ; dbo:areaTotal ?n } ORDER BY DESC(?n) OFFSET 0 LIMIT 1",
    "Sparql_189" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?lcity WHERE { dbr:United_States dbo:largestCity ?lcity }",
    "Sparql_284" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Canada dbo:largestCity ?city . ?city dbo:populationTotal ?num }",
    "Sparql_301" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Australia dbo:largestCity ?uri }"
  }
}, {
  "pattern" : "last",
  "predicates" : [ ],
  "questions" : {
    "88" : "Which music albums contain the song Last Christmas?",
    "226" : "When was the last episode of the TV series Friends aired?",
    "236" : "What is the last work of Dan Brown?",
    "411" : "What was the last movie with Alec Guinness?",
    "412" : "Give me all actors starring in Last Action Hero."
  },
  "Sparql" : {
    "Sparql_88" : "SELECT DISTINCT ?uri WHERE { ?single <http://dbpedia.org/ontology/album> ?uri ; <http://www.w3.org/2000/01/rdf-schema#label> \"Last Christmas\"@en }",
    "Sparql_226" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?date WHERE { dbr:Friends dbo:completionDate ?date }",
    "Sparql_236" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?book WHERE { { ?book dbo:author dbr:Dan_Brown . ?book dbp:releaseDate ?date } UNION { ?book dbo:author dbr:Dan_Brown . ?book dbo:publicationDate ?date} } ORDER BY DESC(xsd:date(?date)) LIMIT 1",
    "Sparql_411" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film ; dbo:starring res:Alec_Guinness ; dbo:releaseDate ?date } ORDER BY DESC(?date) LIMIT 1",
    "Sparql_412" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Last_Action_Hero dbo:starring ?uri }"
  }
}, {
  "pattern" : "least",
  "predicates" : [ ],
  "questions" : {
    "182" : "Give me all films produced by Steven Spielberg with a budget of at least $80 million.",
    "332" : "Which city has the least inhabitants?"
  },
  "Sparql" : {
    "Sparql_182" : "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Steven_Spielberg> . ?uri <http://dbpedia.org/ontology/budget> ?b . FILTER( xsd:double(?b) >= 8.0E7 ) }",
    "Sparql_332" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:City ; dbo:populationTotal ?pop } ORDER BY ASC(?pop) OFFSET 0 LIMIT 1"
  }
}, {
  "pattern" : "lightest",
  "predicates" : [ ],
  "questions" : {
    "156" : "How heavy is Jupiter's lightest moon?"
  },
  "Sparql" : {
    "Sparql_156" : "SELECT DISTINCT ?n WHERE { ?uri <http://dbpedia.org/property/satelliteOf> <http://dbpedia.org/resource/Jupiter> ; <http://dbpedia.org/ontology/mass> ?n } ORDER BY ASC(?n) OFFSET 0 LIMIT 1"
  }
}, {
  "pattern" : "located",
  "predicates" : [ ],
  "questions" : {
    "4" : "In which U.S. state is Area 51 located?",
    "115" : "In which U.S. state is Mount McKinley located?",
    "142" : "Which telecommunications organizations are located in Belgium?",
    "172" : "In which U.S. state is Fort Knox located?"
  },
  "Sparql" : {
    "Sparql_4" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { res:Area_51 dbo:location ?uri . ?uri dbo:country res:United_States. }",
    "Sparql_115" : "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mount_McKinley> dbo:wikiPageRedirects ?x . ?x <http://dbpedia.org/ontology/locatedInArea> ?uri. ?uri rdf:type yago:WikicatStatesOfTheUnitedStates }",
    "Sparql_142" : "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Organisation> { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Telecommunication> } UNION { ?uri <http://dbpedia.org/property/industry> ?industry FILTER regex(?industry, \"Telecommunications\") } { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belgium> } UNION { ?uri <http://dbpedia.org/property/locationCountry> \"Belgium\"@en } }",
    "Sparql_172" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { res:Fort_Knox dbo:location ?uri . ?uri dbo:country res:United_States }"
  }
}, {
  "pattern" : "longest",
  "predicates" : [ ],
  "questions" : {
    "149" : "What is the longest river?",
    "251" : "What is the longest river in the world?",
    "357" : "What is the bridge with the longest span?"
  },
  "Sparql" : {
    "Sparql_149" : "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/River> { ?uri <http://dbpedia.org/ontology/length> ?l } UNION { ?uri <http://dbpedia.org/property/length> ?l } } ORDER BY DESC(?l) OFFSET 0 LIMIT 1",
    "Sparql_251" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri rdf:type dbo:BodyOfWater ; dbo:length ?length } ORDER BY DESC(?length) LIMIT 1",
    "Sparql_357" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Bridge ; dbo:mainspan ?s } ORDER BY DESC(?s) OFFSET 0 LIMIT 1"
  }
}, {
  "pattern" : "lowest",
  "predicates" : [ ],
  "questions" : {
    "105" : "What was Brazil's lowest rank in the FIFA World Ranking?"
  },
  "Sparql" : {
    "Sparql_105" : "SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Brazil_national_football_team> <http://dbpedia.org/property/fifaMin> ?n }"
  }
}, {
  "pattern" : "main",
  "predicates" : [ ],
  "questions" : {
    "280" : "What is Donald Trump's main business?"
  },
  "Sparql" : {
    "Sparql_280" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?owner WHERE { ?owner dbo:owner dbr:Donald_Trump }"
  }
}, {
  "pattern" : "many",
  "predicates" : [ ],
  "questions" : {
    "50" : "How many films did Hal Roach produce?",
    "56" : "How many movies did Park Chan-wook direct?",
    "58" : "How many airlines are there?",
    "60" : "How many inhabitants does Maribor have?",
    "76" : "How many museums does Paris have?",
    "85" : "How many employees does Google have?",
    "90" : "How many missions does the Soyuz programme have?",
    "106" : "How many films did Leonardo DiCaprio star in?",
    "127" : "How many airlines are members of the Star Alliance?",
    "140" : "How many politicians graduated from Columbia University?",
    "144" : "How many children does Eddie Murphy have?",
    "157" : "How many employees does IBM have?",
    "168" : "How many programming languages are there?",
    "225" : "How many people live in Poland?",
    "250" : "How many Aldi stores are there?",
    "256" : "How many people live in the capital of Australia?",
    "258" : "How many theories did Albert Einstein come up with?",
    "262" : "With how many countries Iran has borders?",
    "284" : "How many inhabitants does the largest city in Canada have?",
    "307" : "How many languages are spoken in Turkmenistan?",
    "316" : "How many ethnic groups live in Slovenia?",
    "319" : "How many pages does War and Peace have?",
    "327" : "How many states are in Mexico?",
    "351" : "How many people live in Eurasia?",
    "362" : "How many children did Benjamin Franklin have?",
    "385" : "How many languages are spoken in Colombia?"
  },
  "Sparql" : {
    "Sparql_50" : "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> }",
    "Sparql_56" : "SELECT COUNT(DISTINCT ?uri AS ?uri) WHERE { ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Park_Chan-wook> . }",
    "Sparql_58" : "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Airline> }",
    "Sparql_60" : "SELECT DISTINCT ?num WHERE { <http://dbpedia.org/resource/Maribor> <http://dbpedia.org/ontology/populationTotal> ?num }",
    "Sparql_76" : "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Museum> ; <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Paris> }",
    "Sparql_85" : "SELECT DISTINCT ?num WHERE { <http://dbpedia.org/resource/Google> <http://dbpedia.org/ontology/numberOfEmployees> ?num }",
    "Sparql_90" : "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/property/programme> <http://dbpedia.org/resource/Soyuz_programme> }",
    "Sparql_106" : "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Film> ; <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Leonardo_DiCaprio> }",
    "Sparql_127" : "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/Airline> ; <http://dbpedia.org/ontology/alliance> <http://dbpedia.org/resource/Star_Alliance> }",
    "Sparql_140" : "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Politician> ; <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Columbia_University> }",
    "Sparql_144" : "SELECT DISTINCT ?n WHERE { <http://dbpedia.org/resource/Eddie_Murphy> <http://dbpedia.org/property/children> ?n }",
    "Sparql_157" : "SELECT DISTINCT ?number WHERE { <http://dbpedia.org/resource/IBM> <http://dbpedia.org/ontology/numberOfEmployees> ?number }",
    "Sparql_168" : "SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri a <http://dbpedia.org/ontology/ProgrammingLanguage> }",
    "Sparql_225" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Poland dbo:populationTotal ?uri }",
    "Sparql_250" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?number WHERE { res:Aldi dbo:numberOfLocations ?number }",
    "Sparql_256" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Australia dbo:capital ?x . ?x dbo:populationTotal ?num }",
    "Sparql_258" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT (COUNT(?uri) AS ?count) WHERE { dbr:Albert_Einstein dbo:knownFor ?uri }",
    "Sparql_262" : "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?border WHERE { dbr:Geography_of_Iran dbp:borders ?border } LIMIT 8",
    "Sparql_284" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Canada dbo:largestCity ?city . ?city dbo:populationTotal ?num }",
    "Sparql_307" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?x) AS ?c) WHERE { res:Turkmenistan dbo:language ?x }",
    "Sparql_316" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { res:Slovenia dbo:ethnicGroup ?uri }",
    "Sparql_319" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?n WHERE { res:War_and_Peace dbo:numberOfPages ?n }",
    "Sparql_327" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT (COUNT(?uri) AS ?count) WHERE { ?uri dbo:type dbr:States_of_Mexico }",
    "Sparql_351" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?population WHERE { res:Eurasia dbo:populationTotal ?population }",
    "Sparql_362" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { res:Benjamin_Franklin dbo:child ?uri }",
    "Sparql_385" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT (COUNT(DISTINCT ?uri) AS ?c) WHERE { ?uri rdf:type dbo:Language . res:Colombia dbo:language ?uri }"
  }
}, {
  "pattern" : "methodist",
  "predicates" : [ ],
  "questions" : {
    "118" : "Give me all Methodist politicians."
  },
  "Sparql" : {
    "Sparql_118" : "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Politician> ; <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Methodism> }"
  }
}, {
  "pattern" : "metropolitan",
  "predicates" : [ ],
  "questions" : {
    "98" : "What is the largest metropolitan area in Washington state?"
  },
  "Sparql" : {
    "Sparql_98" : "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Washington_(state)> <http://dbpedia.org/property/largestmetro> ?uri }"
  }
}, {
  "pattern" : "mexico",
  "predicates" : [ ],
  "questions" : {
    "217" : "How much is the population of mexico city ?"
  },
  "Sparql" : {
    "Sparql_217" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Mexico_City WHERE { dbr:Mexico_City dbo:populationTotal ?Mexico_City }"
  }
}, {
  "pattern" : "military",
  "predicates" : [ ],
  "questions" : {
    "369" : "In which military conflicts did Lawrence of Arabia participate?"
  },
  "Sparql" : {
    "Sparql_369" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:T._E._Lawrence dbo:battle ?uri }"
  }
}, {
  "pattern" : "much",
  "predicates" : [ ],
  "questions" : {
    "83" : "How much carbs does peanut butter have?",
    "216" : "how much is the elevation of Düsseldorf Airport ?",
    "217" : "How much is the population of mexico city ?",
    "230" : "how much is the total population of  european union?",
    "283" : "how much is the population  Iraq?",
    "288" : "how much is the population densty rank of germany?"
  },
  "Sparql" : {
    "Sparql_83" : "SELECT DISTINCT ?carbs WHERE { <http://dbpedia.org/resource/Peanut_butter> <http://dbpedia.org/property/carbs> ?carbs }",
    "Sparql_216" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?ele WHERE { dbr:Düsseldorf_Airport dbo:elevation ?ele } LIMIT 1",
    "Sparql_217" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?Mexico_City WHERE { dbr:Mexico_City dbo:populationTotal ?Mexico_City }",
    "Sparql_230" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?europop WHERE { dbr:European_Union dbo:populationTotal ?europop }",
    "Sparql_283" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?pIraq WHERE { dbr:Iraq dbo:populationTotal ?pIraq }",
    "Sparql_288" : "PREFIX dbr: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT ?rank WHERE { dbr:Germany dbp:populationDensityRank ?rank }"
  }
}, {
  "pattern" : "net",
  "predicates" : [ ],
  "questions" : {
    "93" : "What is the net income of Apple?"
  },
  "Sparql" : {
    "Sparql_93" : "SELECT DISTINCT ?ni WHERE { <http://dbpedia.org/resource/Apple_Inc.> <http://dbpedia.org/ontology/netIncome> ?ni }"
  }
}, {
  "pattern" : "new",
  "predicates" : [ ],
  "questions" : {
    "160" : "Does the new Battlestar Galactica series have more episodes than the old one?"
  },
  "Sparql" : {
    "Sparql_160" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { <http://dbpedia.org/resource/Battlestar_Galactica_%281978_TV_series%29> dbo:numberOfEpisodes ?x . <http://dbpedia.org/resource/Battlestar_Galactica_%282004_TV_series%29> dbo:numberOfEpisodes ?y FILTER ( ?y > ?x ) }"
  }
}, {
  "pattern" : "nobel",
  "predicates" : [ ],
  "questions" : {
    "326" : "Did Tesla win a nobel prize in physics?"
  },
  "Sparql" : {
    "Sparql_326" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Nikola_Tesla dbo:award res:Nobel_Prize_in_Physics }"
  }
}, {
  "pattern" : "non-profit",
  "predicates" : [ ],
  "questions" : {
    "42" : "Give me all Swiss non-profit organizations."
  },
  "Sparql" : {
    "Sparql_42" : "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Nonprofit_organization> { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Switzerland> } UNION { ?uri <http://dbpedia.org/ontology/location> ?x . ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Switzerland> } }"
  }
}, {
  "pattern" : "nonprofit",
  "predicates" : [ ],
  "questions" : {
    "71" : "Give me all Australian nonprofit organizations."
  },
  "Sparql" : {
    "Sparql_71" : "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Nonprofit_organization> { ?uri <http://dbpedia.org/ontology/locationCountry> <http://dbpedia.org/resource/Australia> } UNION { ?uri <http://dbpedia.org/ontology/location> ?x . ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> } }"
  }
}, {
  "pattern" : "official",
  "predicates" : [ ],
  "questions" : {
    "10" : "What are the official languages of the Philippines?",
    "49" : "What is the official color of the University of Oxford?",
    "110" : "Which country has the most official languages?",
    "134" : "Which countries have more than two official languages?",
    "291" : "What is the official language of Suriname?"
  },
  "Sparql" : {
    "Sparql_10" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Philippines dbo:officialLanguage ?uri }",
    "Sparql_49" : "SELECT DISTINCT ?string WHERE { <http://dbpedia.org/resource/University_of_Oxford> <http://dbpedia.org/ontology/officialSchoolColour> ?string }",
    "Sparql_110" : "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . ?uri <http://dbpedia.org/property/officialLanguages> ?language . } ORDER BY DESC(COUNT(?language)) OFFSET 0 LIMIT 1",
    "Sparql_134" : "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Country> ; <http://dbpedia.org/ontology/officialLanguage> ?language } GROUP BY ?uri HAVING ( COUNT(?language) > 2 )",
    "Sparql_291" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Suriname dbo:officialLanguage ?uri }"
  }
}, {
  "pattern" : "old",
  "predicates" : [ ],
  "questions" : {
    "160" : "Does the new Battlestar Galactica series have more episodes than the old one?"
  },
  "Sparql" : {
    "Sparql_160" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { <http://dbpedia.org/resource/Battlestar_Galactica_%281978_TV_series%29> dbo:numberOfEpisodes ?x . <http://dbpedia.org/resource/Battlestar_Galactica_%282004_TV_series%29> dbo:numberOfEpisodes ?y FILTER ( ?y > ?x ) }"
  }
}, {
  "pattern" : "oldest",
  "predicates" : [ ],
  "questions" : {
    "320" : "Who is the oldest child of Meryl Streep?",
    "349" : "Which city has the oldest running metro?"
  },
  "Sparql" : {
    "Sparql_320" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Meryl_Streep dbo:child ?uri . ?uri dbo:birthDate ?d } ORDER BY ASC(?d) OFFSET 0 LIMIT 1",
    "Sparql_349" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?loc WHERE { ?uri dbo:type dbr:Rapid_transit ; dbo:openingYear ?date ; dbo:location ?loc . ?loc rdf:type dbo:City } ORDER BY ASC(?date) LIMIT 1"
  }
}, {
  "pattern" : "olof",
  "predicates" : [ ],
  "questions" : {
    "177" : "When was Olof Palme shot?"
  },
  "Sparql" : {
    "Sparql_177" : "SELECT DISTINCT ?date WHERE { <http://dbpedia.org/resource/Olof_Palme> <http://dbpedia.org/ontology/deathDate> ?date }"
  }
}, {
  "pattern" : "past",
  "predicates" : [ ],
  "questions" : {
    "68" : "Give me all world heritage sites designated within the past two years."
  },
  "Sparql" : {
    "Sparql_68" : "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WorldHeritageSite> . { ?uri <http://dbpedia.org/property/year> '2013'^^xsd:integer . } UNION { ?uri <http://dbpedia.org/property/year> '2014'^^xsd:integer . } }"
  }
}, {
  "pattern" : "prime",
  "predicates" : [ ],
  "questions" : {
    "132" : "Where is the residence of the prime minister of Spain?"
  },
  "Sparql" : {
    "Sparql_132" : "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Prime_Minister_of_Spain> <http://dbpedia.org/property/residence> ?uri }"
  }
}, {
  "pattern" : "pro-european",
  "predicates" : [ ],
  "questions" : {
    "163" : "Which Greek parties are pro-European?"
  },
  "Sparql" : {
    "Sparql_163" : "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/PoliticalParty> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Greece> ; <http://dbpedia.org/ontology/ideology> <http://dbpedia.org/resource/Pro-Europeanism> }"
  }
}, {
  "pattern" : "real",
  "predicates" : [ ],
  "questions" : {
    "146" : "Who is the manager of Real Madrid?",
    "334" : "Does Neymar play for Real Madrid?"
  },
  "Sparql" : {
    "Sparql_146" : "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Real_Madrid_C.F.> <http://dbpedia.org/ontology/manager> ?uri }",
    "Sparql_334" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Neymar dbo:team <http://dbpedia.org/resource/Real_Madrid_C.F.> }"
  }
}, {
  "pattern" : "role-playing",
  "predicates" : [ ],
  "questions" : {
    "32" : "What are the top-10 action role-playing video games according to IGN?"
  },
  "Sparql" : {
    "Sparql_32" : "SELECT DISTINCT ?uri WHERE { ?uri <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Action_role-playing_video_games> ; <http://dbpedia.org/property/ign> ?score } ORDER BY DESC(?score) LIMIT 10"
  }
}, {
  "pattern" : "second",
  "predicates" : [ ],
  "questions" : {
    "165" : "What is the second highest mountain on Earth?"
  },
  "Sparql" : {
    "Sparql_165" : "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Mountain> ; <http://dbpedia.org/ontology/elevation> ?elevation } ORDER BY DESC(?elevation) OFFSET 1 LIMIT 1"
  }
}, {
  "pattern" : "smallest",
  "predicates" : [ ],
  "questions" : {
    "154" : "What is the smallest city by area in Germany?"
  },
  "Sparql" : {
    "Sparql_154" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX skos: <http://www.w3.org/2004/02/skos/core#> PREFIX dbc: <http://dbpedia.org/resource/Category:> PREFIX dct: <http://purl.org/dc/terms/> SELECT ?city WHERE { ?m skos:broader dbc:Cities_in_Germany . ?city dct:subject ?m ; dbo:areaTotal ?area } ORDER BY ?area LIMIT 1"
  }
}, {
  "pattern" : "spanish",
  "predicates" : [ ],
  "questions" : {
    "345" : "Who is starring in Spanish movies produced by Benicio del Toro?"
  },
  "Sparql" : {
    "Sparql_345" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?film rdf:type dbo:Film ; dbo:country res:Spain ; dbo:producer res:Benicio_del_Toro ; dbo:starring ?uri . ?uri rdf:type dbo:Person }"
  }
}, {
  "pattern" : "sparkling",
  "predicates" : [ ],
  "questions" : {
    "387" : "Where in France is sparkling wine produced?"
  },
  "Sparql" : {
    "Sparql_387" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:wineProduced res:Sparkling_wine ; dbo:location res:France }"
  }
}, {
  "pattern" : "swedish",
  "predicates" : [ ],
  "questions" : {
    "94" : "Give me all Swedish holidays.",
    "403" : "Give me all Swedish oceanographers."
  },
  "Sparql" : {
    "Sparql_94" : "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/Holiday> ; <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Sweden> }",
    "Sparql_403" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:field res:Oceanography ; dbo:birthPlace res:Sweden }"
  }
}, {
  "pattern" : "swiss",
  "predicates" : [ ],
  "questions" : {
    "42" : "Give me all Swiss non-profit organizations."
  },
  "Sparql" : {
    "Sparql_42" : "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Nonprofit_organization> { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Switzerland> } UNION { ?uri <http://dbpedia.org/ontology/location> ?x . ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Switzerland> } }"
  }
}, {
  "pattern" : "tall",
  "predicates" : [ ],
  "questions" : {
    "287" : "How tall is Claudia Schiffer?",
    "363" : "How tall is Michael Jordan?",
    "392" : "How tall is Amazon Eve?"
  },
  "Sparql" : {
    "Sparql_287" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?height WHERE { res:Claudia_Schiffer dbo:height ?height }",
    "Sparql_363" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Michael_Jordan dbo:height ?num }",
    "Sparql_392" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?height WHERE { res:Amazon_Eve dbo:height ?height }"
  }
}, {
  "pattern" : "tallest",
  "predicates" : [ ],
  "questions" : {
    "31" : "Who is the tallest player of the Atlanta Falcons?",
    "306" : "Who is the tallest basketball player?"
  },
  "Sparql" : {
    "Sparql_31" : "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Atlanta_Falcons> ; <http://dbpedia.org/ontology/height> ?h } ORDER BY DESC(?h) OFFSET 0 LIMIT 1",
    "Sparql_306" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:BasketballPlayer ; dbo:height ?num } ORDER BY DESC(?num) OFFSET 0 LIMIT 1"
  }
}, {
  "pattern" : "top-10",
  "predicates" : [ ],
  "questions" : {
    "32" : "What are the top-10 action role-playing video games according to IGN?"
  },
  "Sparql" : {
    "Sparql_32" : "SELECT DISTINCT ?uri WHERE { ?uri <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Action_role-playing_video_games> ; <http://dbpedia.org/property/ign> ?score } ORDER BY DESC(?score) LIMIT 10"
  }
}, {
  "pattern" : "total",
  "predicates" : [ ],
  "questions" : {
    "111" : "What is the total amount of men and women serving in the FDNY?",
    "230" : "how much is the total population of  european union?",
    "278" : "how big is the total area of North Rhine- Westphalia?",
    "353" : "What is the total population of Melbourne, Florida?"
  },
  "Sparql" : {
    "Sparql_111" : "SELECT DISTINCT ?num WHERE { <http://dbpedia.org/resource/New_York_City_Fire_Department> <http://dbpedia.org/property/employees> ?num }",
    "Sparql_230" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?europop WHERE { dbr:European_Union dbo:populationTotal ?europop }",
    "Sparql_278" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbr: <http://dbpedia.org/resource/> SELECT ?tarea WHERE { dbr:North_Rhine-Westphalia dbo:areaTotal ?tarea }",
    "Sparql_353" : "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { <http://dbpedia.org/resource/Melbourne,_Florida> dbo:populationTotal ?uri }"
  }
}, {
  "pattern" : "viking",
  "predicates" : [ ],
  "questions" : {
    "378" : "Which books by Kerouac were published by Viking Press?"
  },
  "Sparql" : {
    "Sparql_378" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book ; dbo:publisher res:Viking_Press ; dbo:author res:Jack_Kerouac }"
  }
}, {
  "pattern" : "youngest",
  "predicates" : [ ],
  "questions" : {
    "53" : "Who are the four youngest MVP basketball players?",
    "222" : "Who is the youngest Darts player?"
  },
  "Sparql" : {
    "Sparql_53" : "SELECT DISTINCT ?uri WHERE { ?uri a <http://dbpedia.org/ontology/BasketballPlayer> ; <http://dbpedia.org/ontology/birthDate> ?date ; <http://dbpedia.org/property/highlights> ?h FILTER regex(?h, \"MVP\") } ORDER BY DESC(?date) OFFSET 0 LIMIT 4",
    "Sparql_222" : "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:DartsPlayer ; dbo:birthDate ?date } ORDER BY DESC(?date) OFFSET 0 LIMIT 1"
  }
} ]
